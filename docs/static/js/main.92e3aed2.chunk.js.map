{"version":3,"sources":["LocalStorage.js","CachingManager.js","Blaseball.js","events.js","columns.js","sibr.js","App.js","serviceWorker.js","index.js"],"names":["loadData","key","serializedData","localStorage","getItem","JSON","parse","error","cachedPromises","cachedServices","checkCache","dataKey","cachedService","inMemoryCache","inMemoryData","data","currentTime","Date","expires","localStore","localCache","localData","Object","entries","forEach","storageItem","checkCachedServices","Promise","resolve","checkCachedPromises","cachePromise","promise","cacheService","now","cacheData","setSeconds","getSeconds","originalCacheData","stringify","setItem","saveData","assign","resetCachedPromise","getTeams","cache","axios","get","then","response","getPlayersFromBlaseball","type","teamPromises","map","team","processTeam","all","nickname","ids","LodashGet","join","results","params","player","value","_id","name","searchKey","label","String","fromCodePoint","emoji","getBonusPlayers","bonusPlayers","LodashSortBy","LodashFlatten","concat","gameEvents","playerEvents","renderPlayer","playerId","players","LodashFind","renderTeam","teamId","teams","batters","pitchers","a","b","id","game_id","text","record","index","eventId","events","GameEvents","event_type","cleanedParams","LodashPickBy","LodashIdentity","catch","reject","formLayout","labelCol","span","wrapperCol","tableLayout","scroll","x","App","props","state","onFinish","bind","this","getPlayers","Blaseball","setState","values","sibr","console","log","csvLink","className","Header","theme","src","alt","Content","style","padding","Item","placeholder","options","showSearch","allowClear","optionFilterProp","offset","htmlType","dataSource","columns","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.92e3aed2.chunk.js","sourcesContent":["export const cacheKey = 'cache';\n\n/**\n * Clear localStorage cache\n */\nexport const clearCache = () => {\n    localStorage.removeItem(cacheKey);\n};\n\n/**\n * Load data from local storage via data key\n * @param {*} key\n */\nexport const loadData = (key) => {\n    try {\n        const serializedData = localStorage.getItem(key);\n\n        if (serializedData === null) {\n            return undefined;\n        }\n\n        return JSON.parse(serializedData);\n    } catch (error) {\n        return undefined;\n    }\n};\n\n/**\n * Save data to local storage\n * @param {*} key\n * @param {*} data\n */\nexport const saveData = (key, data) => {\n    try {\n        const serializedData = JSON.stringify(data);\n        localStorage.setItem(key, serializedData);\n    } catch (error) {\n        /* istanbul ignore next line */\n        return error;\n    }\n};\n","import { cacheKey, loadData, saveData } from './LocalStorage';\n\nconst cacheTTL = 600;\n\nlet cachedPromises = {};\nlet cachedServices = {};\n\nconst checkCachedPromises = (dataKey) => cachedPromises[dataKey + 'Promise'];\n\nconst resetCachedPromise = (dataKey) => {\n    cachedPromises[dataKey + 'Promise'] = false;\n};\n\nconst checkCachedServices = (dataKey) => {\n    const inMemoryCache = cachedServices && cachedServices[dataKey];\n    const inMemoryData = inMemoryCache && inMemoryCache.data;\n    const currentTime = Date.parse(new Date());\n\n    if (inMemoryCache && currentTime <= inMemoryCache.expires) {\n        return inMemoryData;\n    } else {\n        const localStore = loadData(cacheKey);\n\n        const localCache = localStore && localStore[dataKey];\n        const localData = localCache && localCache.data;\n\n        if (localData && Date.parse(new Date()) <= localCache.expires) {\n            localStore && Object.entries(localStore).forEach(([key, storageItem]) => {\n                if (!cachedServices[key] || currentTime <= storageItem.expires) {\n                    cachedServices[key] = storageItem;\n                }\n            });\n\n            return localData;\n        }\n    }\n    return false;\n};\n\nexport function checkCache (dataKey) {\n    const cachedService = checkCachedServices(dataKey);\n\n    if (cachedService) {\n        return Promise.resolve(cachedService);\n    }\n\n    return checkCachedPromises(dataKey) || false;\n}\n\nexport function cachePromise (dataKey, promise) {\n    cachedPromises[dataKey + 'Promise'] = promise;\n    return promise;\n}\n\nexport function cacheService (dataKey, data) {\n    if (!data) { return data; }\n\n    const now = new Date();\n    const cacheData = {\n        data: data,\n        expires: now.setSeconds(now.getSeconds() + cacheTTL)\n    };\n\n    const originalCacheData = loadData(cacheKey);\n    const newCache = Object.assign({}, originalCacheData, {[dataKey]: cacheData});\n    saveData(cacheKey, newCache);\n    cachedServices[dataKey] = cacheData;\n\n    resetCachedPromise(dataKey);\n\n    return data;\n}\n\nexport default {\n    cachePromise,\n    cacheService,\n    checkCache\n};\n","import axios from 'axios';\nimport LodashGet from 'lodash/get';\nimport LodashFlatten from 'lodash/flatten';\nimport LodashSortBy from 'lodash/sortBy';\n\nimport { checkCache, cachePromise, cacheService } from './CachingManager';\n\nexport const getPlayers = (type) => {\n    const bonusPlayers = getBonusPlayers(type);\n    return getPlayersFromBlaseball(type).then(data => LodashSortBy(LodashFlatten(data).concat(bonusPlayers), ['name']));\n};\n\nexport const getTeams = () => {\n    const dataKey = 'allTeams';\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get(`https://blaseball.com/database/allTeams`)\n        .then(response => cacheService(dataKey, response && response.data));\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getPlayersFromBlaseball = (type) => {\n    return getTeams().then(response => {\n        let teamPromises = response.map(team => processTeam(team, type));\n        return Promise.all(teamPromises);\n    });\n};\n\nconst processTeam = (team, type) => {\n    const dataKey = `${team.nickname}${type}Members`;\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n    const ids = LodashGet(team, type).join(',');\n    const results = axios.get(`https://blaseball.com/database/players`, { params: { ids: ids }})\n        .then(response => \n            cacheService(dataKey, response && response.data && response.data.map(player => {\n                return {\n                    value: player._id,\n                    name: player.name,\n                    searchKey: `${player.name} ${player._id} ${team.nickname}`,\n                    label: `${player.name} (${String.fromCodePoint(team.emoji)} ${team.nickname})`,\n                    team: team.nickname\n                };\n            })));\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getTeamEmojis = (team) => {\n\n};\n\n\n\nconst getBonusPlayers = (type) => {\n    switch (type) {\n        default:\n            return [];\n    }\n};\n\nexport default {\n    getPlayers,\n    getTeams\n};\n","export const gameEvents = [\n    {\n        value: 'UNKNOWN',\n        label: 'Unknown'\n    }, {\n        value: 'NONE',\n        label: 'None'\n    }, {\n        value: 'OUT',\n        label: 'Out'\n    }, {\n        value: 'STRIKEOUT',\n        label: 'Strikeout'\n    }, {\n        value: 'STOLEN_BASE',\n        label: 'Stolen Base'\n    }, {\n        value: 'CAUGHT_STEALING',\n        label: 'Caugh Stealing'\n    }, {\n        value: 'PICKOFF',\n        label: 'Pickoff'\n    }, {\n        value: 'WILD_PITCH',\n        label: 'Wild Pitch'\n    }, {\n        value: 'BALK',\n        label: 'Balk'\n    }, {\n        value: 'OTHER_ADVANCE',\n        label: 'Other Advance'\n    }, {\n        value: 'WALK',\n        label: 'Walk'\n    }, {\n        value: 'INTENTIONAL_WALK',\n        label: 'Intentional Walk'\n    }, {\n        value: 'HIT_BY_PITCH',\n        label: 'Hit By Pitch'\n    }, {\n        value: 'FIELDERS_CHOICE',\n        label: 'Fielders Choice'\n    }, {\n        value: 'SINGLE',\n        label: 'Single'\n    }, {\n        value: 'DOUBLE',\n        label: 'Double'\n    }, {\n        value: 'TRIPLE',\n        label: 'Triple'\n    }, {\n        value: 'HOME_RUN',\n        label: 'Home Run'\n    }\n];\n\nexport const playerEvents = [\n    {\n        value: 'INCINERATION',\n        label: 'Incineration'\n    }, {\n        value: 'PEANUT_GOOD',\n        label: 'Peanut (Yummy Reaction)'\n    }, {\n        value: 'PEANUT_BAD',\n        label: 'Peanut (Allergic Reaction)'\n    }\n];\n\nexport default {\n    gameEvents,\n    playerEvents\n};","import events from './events';\nimport LodashFind from 'lodash/find';\nimport LodashGet from 'lodash/get';\n\nexport const renderPlayer = (playerId, players) => {\n  return LodashGet(LodashFind(players, { 'value': playerId}), 'label', playerId)\n};\n\nexport const renderTeam = (teamId, teams) => {\n  const team = LodashFind(teams, { '_id': teamId});\n  return `${String.fromCodePoint(LodashGet(team, 'emoji', ''))} ${LodashGet(team, 'nickname', teamId)}`\n};\n\nexport const renderEvents = (eventId) => {\n  return LodashGet(LodashFind(events.GameEvents, { 'value': eventId}), 'label', eventId);\n};\n\nexport const gameEventColumns = (batters, pitchers, teams) => {\n  return [\n    {\n      'dataIndex': 'id',\n      'title': 'id',\n      'sorter': (a, b) => a.id - b.id\n    },\n    {\n      'dataIndex': 'game_id',\n      'title': 'game id',\n      'sorter': (a, b) => a.game_id - b.game_id\n    },\n    {\n      'dataIndex': 'event_type',\n      'title': 'event type',\n      'render': (text, record, index) => renderEvents(text),\n      'sorter': (a, b) => a.event_type - b.event_type\n    },\n    {\n      'dataIndex': 'event_text',\n      'title': 'event text'\n    },\n    {\n      'dataIndex': 'inning',\n      'title': 'inning'\n    },\n    {\n      'dataIndex': 'top_of_inning',\n      'title': 'top of inning'\n    },\n    {\n      'dataIndex': 'outs_before_play',\n      'title': 'outs before play'\n    },\n    {\n      'dataIndex': 'batter_id',\n      'title': 'batter id',\n      'render': (text, record, index) => renderPlayer(text, batters)\n    },\n    {\n      'dataIndex': 'batter_team_id',\n      'title': 'batter team id',\n      'render': (text, record, index) => renderTeam(text, teams)\n    },\n    {\n      'dataIndex': 'pitcher_id',\n      'title': 'pitcher id',\n      'render': (text, record, index) => renderPlayer(text, pitchers)\n    },\n    {\n      'dataIndex': 'pitcher_team_id',\n      'title': 'pitcher team id',\n      'render': (text, record, index) => renderTeam(text, teams)\n    },\n    {\n      'dataIndex': 'home_score',\n      'title': 'home score'\n    },\n    {\n      'dataIndex': 'away_score',\n      'title': 'away score'\n    },\n    {\n      'dataIndex': 'home_strike_count',\n      'title': 'home strike count'\n    },\n    {\n      'dataIndex': 'away_strike_count',\n      'title': 'away strike count'\n    },\n    {\n      'dataIndex': 'batter_count',\n      'title': 'batter count'\n    },\n    {\n      'dataIndex': 'pitches',\n      'title': 'pitches'\n    },\n    {\n      'dataIndex': 'total_strikes',\n      'title': 'total strikes'\n    },\n    {\n      'dataIndex': 'total_balls',\n      'title': 'total balls'\n    },\n    {\n      'dataIndex': 'bases_hit',\n      'title': 'bases hit'\n    },\n    {\n      'dataIndex': 'runs_batted_in',\n      'title': 'runs batted in'\n    },\n    {\n      'dataIndex': 'outs_on_play',\n      'title': 'outs on play'\n    },\n    {\n      'dataIndex': 'errors_on_play',\n      'title': 'errors on play'\n    },\n    {\n      'dataIndex': 'batter_base_after_play',\n      'title': 'batter base after play'\n    },\n    {\n      'dataIndex': 'additional_context',\n      'title': 'additional context'\n    }\n  ];\n};\n\nexport default {\n    gameEventColumns\n};","import axios from 'axios';\nimport LodashPickBy from 'lodash/pickBy';\nimport LodashIdentity from 'lodash/identity';\nimport { checkCache, cachePromise, cacheService } from './CachingManager';\n\nexport const getEvents = (params) => {\n    const cleanedParams = LodashPickBy(params, LodashIdentity);\n    const dataKey = JSON.stringify(cleanedParams);\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get('https://cors-anywhere.herokuapp.com/https://api.blaseball-reference.com/v1/events', { params: cleanedParams })\n        .then(response => cacheService(dataKey, response && response.data))\n        .catch(/* istanbul ignore next */ error => Promise.reject(error));\n\n    return cachePromise(dataKey, results);\n};\n\nexport default {\n    getEvents\n};\n","import React from 'react';\nimport { Button, Form, Input, Select, Table, Layout } from 'antd';\nimport Blaseball from './Blaseball';\nimport events from './events';\nimport columns from './columns';\nimport { CSVLink } from 'react-csv';\n\n//import PlayersSelect from './PlayersSelect';\nimport sibr from './sibr';\n\nconst formLayout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 }\n};\n\nconst tableLayout = {\n  scroll: { x: true }\n};\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { results: null, batters: null, pitchers: null };\n        this.onFinish = this.onFinish.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('lineup').then(/* istanbul ignore next */ data => {\n            data && this.setState({ batters: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('rotation').then(/* istanbul ignore next */ data => {\n            data && this.setState({ pitchers: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    onFinish (values) {\n        sibr.getEvents(values)\n            .then(results => {\n                console.log(results);\n                this.setState({ results: results && results.results });\n            })\n            .catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    render () {\n      const { results, batters, pitchers, teams } = this.state;\n      const csvLink = results ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n      return (\n        <div className='App'>\n            <Layout>\n                <Layout.Header theme='dark'>\n                    <img src='logo192.png' className='logo' alt='SIBR Scryer' />\n                    <h1>SIBR Scryer</h1>\n                </Layout.Header>\n                <Layout.Content>\n                    <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                        <Form.Item name='gameId' label='Game'>\n                            <Input placeholder='dc767612-eb77-417b-8d2f-c21eb4dab868' />\n                        </Form.Item>\n                        <Form.Item name='pitcherId' label='Pitcher'>\n                            <Select placeholder='Pitcher' options={pitchers} showSearch allowClear optionFilterProp='searchKey' />\n                        </Form.Item>\n                        <Form.Item name='batterId' label='Batter'>\n                            <Select placeholder='Batter' options={batters} showSearch allowClear optionFilterProp='searchKey' />\n                        </Form.Item>\n                        <Form.Item name='type' label='Type'>\n                            <Select options={events.gameEvents} showSearch allowClear />\n                        </Form.Item>\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                            <Button type='primary' htmlType='submit'>\n                              Submit\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                    <div className='results-list'>\n                        {csvLink}\n                        <Table dataSource={results} columns={columns.gameEventColumns(batters, pitchers, teams)} {...tableLayout} />\n                    </div>\n                </Layout.Content>\n            </Layout>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}