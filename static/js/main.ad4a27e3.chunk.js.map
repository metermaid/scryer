{"version":3,"sources":["About.js","Menu.js","services/BackupBatters.js","services/BackupPitchers.js","services/Players.js","services/LocalStorage.js","services/CachingManager.js","services/Blaseball.js","services/SIBR.js","config/EventsConfig.js","config/ColumnsConfig.js","Events.js","config/APIConfig.js","BatterStats.js","PitcherStats.js","Games.js","App.js","serviceWorker.js","index.js"],"names":["About","Content","className","href","React","Component","Menu","location","this","props","theme","mode","selectedKeys","pathname","Item","key","to","withRouter","backupBatters","backupPitchers","bonusPlayers","backupPlayers","loadData","serializedData","localStorage","getItem","JSON","parse","error","cachedPromises","cachedServices","checkCache","dataKey","cachedService","inMemoryCache","inMemoryData","data","currentTime","Date","expires","localStore","localCache","localData","Object","entries","forEach","storageItem","checkCachedServices","Promise","resolve","checkCachedPromises","cachePromise","promise","cacheService","now","cacheData","setSeconds","getSeconds","originalCacheData","stringify","setItem","saveData","assign","resetCachedPromise","getTeams","cache","axios","get","then","response","getPlayersFromBlaseball","type","teamPromises","map","team","processTeam","all","nickname","ids","LodashGet","join","results","params","LodashUniq","player","getPlayerObject","concat","getBonusPlayers","value","id","name","searchkey","label","String","fromCodePoint","emoji","fullName","getBackupPlayers","filter","position","localeCompare","LodashSortBy","LodashFlatten","catch","season","day","renderPlayer","playerId","players","LodashFind","renderPlayerTeam","renderTeam","teamId","teams","addEventCols","remainder","row","newValues","batter_team_name","batter_team_id","pitcher_team_name","pitcher_team_id","batter_name","batter_id","pitcher_name","pitcher_id","addPlayerCols","index","cleanedParams","LodashPickBy","LodashIdentity","reject","api","LodashOmit","gameEvents","text","getColumnAlphaSortProps","field_name","sorter","a","b","getColumnNumericalSortProps","getColumnPlayerFilterProps","filters","onFilter","record","getColumnTeamFilterProps","includes","getColumnSearchProps","dataIndex","searchInput","handleSearch","handleReset","filterDropdown","setSelectedKeys","confirm","clearFilters","style","padding","ref","node","placeholder","onChange","e","target","onPressEnter","width","marginBottom","display","onClick","icon","SearchOutlined","size","filterIcon","filtered","color","undefined","toString","toLowerCase","onFilterDropdownVisibleChange","visible","setTimeout","select","getColumnNumericalSortAndSearchProps","gameEventColumns","batters","pitchers","eventId","event_type","line","batterStatColumns","pitcherStatColumns","gameAPIColumns","formLayout","labelCol","span","wrapperCol","tableLayout","bordered","scroll","x","Events","state","searchText","searchedColumn","onFinish","bind","getPlayers","Blaseball","setState","values","gameId","pitcherId","batterId","sibr","console","log","csvLink","length","errorMessage","closable","message","options","showSearch","allowClear","optionFilterProp","offset","htmlType","dataSource","columns","batterAPIs","pitcherAPIs","BatterStats","newResultsWithAPI","result","LodashUniqWith","LodashIsEq","required","PitcherStats","Games","parseInt","initialValue","min","max","App","basename","Header","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad4a27e3.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout } from 'antd';\n\nclass About extends React.Component {\n    render () {\n      return (\n            <Layout.Content className=\"site-layout-background\">\n                <p>Scryer is built to interact with SIBR's datablase, and would literally be nothing without SIBR. For more information on SIBR, <a href=\"https://github.com/Society-for-Internet-Blaseball-Research/sibr-faq\"> visit the FAQ</a>.</p>\n                <p>There are some features of the datablase API that are not built into scryer, so you may be interested in <a href=\"https://api.blaseball-reference.com/docs\">using it directly</a>.</p>\n                <p>A non-exhaustive list of people who are owed credits for the datablase include: Corvimae, lilserf, Sakimori, iliana, shibboh, tehstone.</p>\n                <p>For feedback or questions, contact risky#9552 on the SIBR or blaseball discords.</p>\n            </Layout.Content>\n      );\n    }\n}\n\nexport default About;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Menu as AntMenu } from 'antd';\n\nclass Menu extends React.Component {\n    render() {\n        const { location } = this.props;\n        return (\n            <AntMenu theme='dark' mode='horizontal' selectedKeys={[location.pathname]}>\n                <AntMenu.Item key='/'><Link to='/'>Event Logs</Link></AntMenu.Item>\n                <AntMenu.Item key='/batter'><Link to='/batter'>Batter Stats</Link></AntMenu.Item>\n                <AntMenu.Item key='/pitcher'><Link to='/pitcher'>Pitcher Stats</Link></AntMenu.Item>\n                <AntMenu.Item key='/games'><Link to='/games'>Games</Link></AntMenu.Item>\n                <AntMenu.Item key='/about'><Link to='/about'>About</Link></AntMenu.Item>\n            </AntMenu>\n        );\n    }\n}\n\nexport default withRouter(Menu);\n","export const backupBatters = [\n    {\n        \"id\": \"f2468055-e880-40bf-8ac6-a0763d846eb2\",\n        \"name\": \"Alaynabella Hollywood\",\n        \"position\": \"lineup\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"efafe75e-2f00-4418-914c-9b6675d39264\",\n        \"name\": \"Aldon Cashmoney\",\n        \"position\": \"lineup\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"c9e4a49e-e35a-4034-a4c7-293896b40c58\",\n        \"name\": \"Alexander Horne\",\n        \"position\": \"lineup\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"262c49c6-8301-487d-8356-747023fa46a9\",\n        \"name\": \"Alexandria Dracaena\",\n        \"position\": \"lineup\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"e111a46d-5ada-4311-ac4f-175cca3357da\",\n        \"name\": \"Alexandria Rosales\",\n        \"position\": \"lineup\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"1068f44b-34a0-42d8-a92e-2be748681a6f\",\n        \"name\": \"Allison Abbott\",\n        \"position\": \"lineup\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"80de2b05-e0d4-4d33-9297-9951b2b5c950\",\n        \"name\": \"Alyssa Harrell\",\n        \"position\": \"lineup\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"f38c5d80-093f-46eb-99d6-942aa45cd921\",\n        \"name\": \"Andrew Solis\",\n        \"position\": \"lineup\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"248ccf3d-d5f6-4b69-83d9-40230ca909cd\",\n        \"name\": \"Antonio Wallace\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"f44a8b27-85c1-44de-b129-1b0f60bcb99c\",\n        \"name\": \"Atlas Jonbois\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"c17a4397-4dcc-440e-8c53-d897e971cae9\",\n        \"name\": \"August Mina\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"8cf78b49-d0ca-4703-88e8-4bcad26c44b1\",\n        \"name\": \"Avila Guzman\",\n        \"position\": \"lineup\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"4204c2d1-ca48-4af7-b827-e99907f12d61\",\n        \"name\": \"Axel Cardenas\",\n        \"position\": \"lineup\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"678170e4-0688-436d-a02d-c0467f9af8c0\",\n        \"name\": \"Baby Doyle\",\n        \"position\": \"lineup\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"ad8d15f4-e041-4a12-a10e-901e6285fdc5\",\n        \"name\": \"Baby Urlacher\",\n        \"position\": \"lineup\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"e4034192-4dc6-4901-bb30-07fe3cf77b5e\",\n        \"name\": \"Baldwin Breadwinner\",\n        \"position\": \"lineup\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"c755efce-d04d-4e00-b5c1-d801070d3808\",\n        \"name\": \"Basilio Fig\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"27c68d7f-5e40-4afa-8b6f-9df47b79e7dd\",\n        \"name\": \"Basilio Mason\",\n        \"position\": \"lineup\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"26cfccf2-850e-43eb-b085-ff73ad0749b8\",\n        \"name\": \"Beasley Day\",\n        \"position\": \"lineup\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"7a75d626-d4fd-474f-a862-473138d8c376\",\n        \"name\": \"Beck Whitney\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"03097200-0d48-4236-a3d2-8bdb153aa8f7\",\n        \"name\": \"Bennett Browning\",\n        \"position\": \"lineup\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"e6114fd4-a11d-4f6c-b823-65691bb2d288\",\n        \"name\": \"Bevan Underbuck\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"ac69dba3-6225-4afd-ab4b-23fc78f730fb\",\n        \"name\": \"Bevan Wise\",\n        \"position\": \"lineup\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"7b0f91aa-4d66-4362-993d-6ff60f7ce0ef\",\n        \"name\": \"Blankenship Fischer\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"f7847de2-df43-4236-8dbe-ae403f5f3ab3\",\n        \"name\": \"Blood Hamburger\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"493a83de-6bcf-41a1-97dd-cc5e150548a3\",\n        \"name\": \"Boyfriend Monreal\",\n        \"position\": \"lineup\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"0fe896e1-108c-4ce9-97be-3470dde73c21\",\n        \"name\": \"Bryanayah Chang\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"0eddd056-9d72-4804-bd60-53144b785d5c\",\n        \"name\": \"Caleb Novak\",\n        \"position\": \"lineup\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"f7715b05-ee69-43e5-a0e5-8e3d34270c82\",\n        \"name\": \"Caligula Lotus\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"defbc540-a36d-460b-afd8-07da2375ee63\",\n        \"name\": \"Castillo Turner\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"6fc3689f-bb7d-4382-98a2-cf6ddc76909d\",\n        \"name\": \"Cedric Gonzalez\",\n        \"position\": \"lineup\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"c31d874c-1b4d-40f2-a1b3-42542e934047\",\n        \"name\": \"Cedric Spliff\",\n        \"position\": \"lineup\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"bd8778e5-02e8-4d1f-9c31-7b63942cc570\",\n        \"name\": \"Cell Barajas\",\n        \"position\": \"lineup\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"a1628d97-16ca-4a75-b8df-569bae02bef9\",\n        \"name\": \"Chorby Soul\",\n        \"position\": \"lineup\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"9ac2e7c5-5a34-4738-98d8-9f917bc6d119\",\n        \"name\": \"Christian Combs\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"ef9f8b95-9e73-49cd-be54-60f84858a285\",\n        \"name\": \"Collins Melon\",\n        \"position\": \"lineup\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"f8c20693-f439-4a29-a421-05ed92749f10\",\n        \"name\": \"Combs Duende\",\n        \"position\": \"lineup\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"d8ee256f-e3d0-46cb-8c77-b1f88d8c9df9\",\n        \"name\": \"Comfort Septemberish\",\n        \"position\": \"lineup\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"5dbf11c0-994a-4482-bd1e-99379148ee45\",\n        \"name\": \"Conrad Vaughan\",\n        \"position\": \"lineup\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"17397256-c28c-4cad-85f2-a21768c66e67\",\n        \"name\": \"Cory Ross\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"bfd9ff52-9bf6-4aaf-a859-d308d8f29616\",\n        \"name\": \"Declan Suzanne\",\n        \"position\": \"lineup\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"3afb30c1-1b12-466a-968a-5a9a21458c7f\",\n        \"name\": \"Dickerson Greatness\",\n        \"position\": \"lineup\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"b39b5aae-8571-4c90-887a-6a00f2a2f6fd\",\n        \"name\": \"Dickerson Morse\",\n        \"position\": \"lineup\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"7310c32f-8f32-40f2-b086-54555a2c0e86\",\n        \"name\": \"Dominic Marijuana\",\n        \"position\": \"lineup\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"11de4da3-8208-43ff-a1ff-0b3480a0fbf1\",\n        \"name\": \"Don Mitchell\",\n        \"position\": \"lineup\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"2b5f5dd7-e31f-4829-bec5-546652103bc0\",\n        \"name\": \"Dudley Mueller\",\n        \"position\": \"lineup\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"d23a1f7e-0071-444e-8361-6ae01f13036f\",\n        \"name\": \"Edric Tosser\",\n        \"position\": \"lineup\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"c73d59dd-32a0-49ce-8ab4-b2dbb7dc94ec\",\n        \"name\": \"Eduardo Ingram\",\n        \"position\": \"lineup\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"32810dca-825c-4dbc-8b65-0702794c424e\",\n        \"name\": \"Eduardo Woodman\",\n        \"position\": \"lineup\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"aa6c2662-75f8-4506-aa06-9a0993313216\",\n        \"name\": \"Eizabeth Elliott\",\n        \"position\": \"lineup\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"cd417f8a-ce01-4ab2-921d-42e2e445bbe2\",\n        \"name\": \"Eizabeth Guerra\",\n        \"position\": \"lineup\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"d1a7c13f-8e78-4d2e-9cae-ebf3a5fcdb5d\",\n        \"name\": \"Elijah Bates\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"2f3d7bc7-6ffb-40c3-a94f-5e626be413c9\",\n        \"name\": \"Elijah Valenzuela\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"80dff591-2393-448a-8d88-122bd424fa4c\",\n        \"name\": \"Elvis Figueroa\",\n        \"position\": \"lineup\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"25376b55-bb6f-48a7-9381-7b8210842fad\",\n        \"name\": \"Emmett Internet\",\n        \"position\": \"lineup\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"b8ab86c6-9054-4832-9b96-508dbd4eb624\",\n        \"name\": \"Esme Ramsey\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"90768354-957e-4b4c-bb6d-eab6bbda0ba3\",\n        \"name\": \"Eugenia Garbage\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"bbf9543f-f100-445a-a467-81d7aab12236\",\n        \"name\": \"Farrell Seagull\",\n        \"position\": \"lineup\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"d89da2d2-674c-4b85-8959-a4bd406f760a\",\n        \"name\": \"Fish Summer\",\n        \"position\": \"lineup\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"8ecea7e0-b1fb-4b74-8c8c-3271cb54f659\",\n        \"name\": \"Fitzgerald Blackburn\",\n        \"position\": \"lineup\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"1e8b09bd-fbdd-444e-bd7e-10326bd57156\",\n        \"name\": \"Fletcher Yamamoto\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"d35ccee1-9559-49a1-aaa4-7809f7b5c46e\",\n        \"name\": \"Forrest Best\",\n        \"position\": \"lineup\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"44c92d97-bb39-469d-a13b-f2dd9ae644d1\",\n        \"name\": \"Francisco Preston\",\n        \"position\": \"lineup\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"6c346d8b-d186-4228-9adb-ae919d7131dd\",\n        \"name\": \"Greer Gwiffin\",\n        \"position\": \"lineup\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"64f4cd75-0c1e-42cf-9ff0-e41c4756f22a\",\n        \"name\": \"Grey Alvarado\",\n        \"position\": \"lineup\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"f0bcf4bb-74b3-412e-a54c-04c12ad28ecb\",\n        \"name\": \"Hahn Fox\",\n        \"position\": \"lineup\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"03b80a57-77ea-4913-9be4-7a85c3594745\",\n        \"name\": \"Halexandrey Walton\",\n        \"position\": \"lineup\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"bd24e18b-800d-4f15-878d-e334fb4803c4\",\n        \"name\": \"Helga Burton\",\n        \"position\": \"lineup\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"0eea4a48-c84b-4538-97e7-3303671934d2\",\n        \"name\": \"Helga Moreno\",\n        \"position\": \"lineup\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"b3d518b9-dc68-4902-b68c-0022ceb25aa0\",\n        \"name\": \"Hendricks Rangel\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"cf8e152e-2d27-4dcc-ba2b-68127de4e6a4\",\n        \"name\": \"Hendricks Richardson\",\n        \"position\": \"lineup\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"88cd6efa-dbf2-4309-aabe-ec1d6f21f98a\",\n        \"name\": \"Hewitt Best\",\n        \"position\": \"lineup\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"25f3a67c-4ed5-45b6-94b1-ce468d3ead21\",\n        \"name\": \"Hobbs Cain\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"817dee99-9ccf-4f41-84e3-dc9773237bc8\",\n        \"name\": \"Holden Stanton\",\n        \"position\": \"lineup\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"2175cda0-a427-40fd-b497-347edcc1cd61\",\n        \"name\": \"Hotbox Sato\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"fa477c92-39b6-4a52-b065-40af2f29840a\",\n        \"name\": \"Howell Franklin\",\n        \"position\": \"lineup\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"b86237bb-ade6-4b1d-9199-a3cc354118d9\",\n        \"name\": \"Hurley Pacheco\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"4f69e8c2-b2a1-4e98-996a-ccf35ac844c5\",\n        \"name\": \"Igneus Delacruz\",\n        \"position\": \"lineup\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"68f98a04-204f-4675-92a7-8823f2277075\",\n        \"name\": \"Isaac Johnson\",\n        \"position\": \"lineup\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"2b1cb8a2-9eba-4fce-85cf-5d997ec45714\",\n        \"name\": \"Isaac Rubberman\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"51c5473a-7545-4a9a-920d-d9b718d0e8d1\",\n        \"name\": \"Jacob Haynes\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"12577256-bc4e-4955-81d6-b422d895fb12\",\n        \"name\": \"Jasmine Washington\",\n        \"position\": \"lineup\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"57448b62-f952-40e2-820c-48d8afe0f64d\",\n        \"name\": \"Jessi Wise\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"083d09d4-7ed3-4100-b021-8fbe30dd43e8\",\n        \"name\": \"Jessica Telephone\",\n        \"position\": \"lineup\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"9be56060-3b01-47aa-a090-d072ef109fbf\",\n        \"name\": \"Jesús Koch\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"1f145436-b25d-49b9-a1e3-2d3c91626211\",\n        \"name\": \"Joe Voorhees\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"3064c7d6-91cc-4c2a-a433-1ce1aabc1ad4\",\n        \"name\": \"Jorge Ito\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"69196296-f652-42ff-b2ca-0d9b50bd9b7b\",\n        \"name\": \"Joshua Butt\",\n        \"position\": \"lineup\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"d6c69d2d-9344-4b19-85a4-6cfcbaead5d2\",\n        \"name\": \"Joshua Watson\",\n        \"position\": \"lineup\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"bd8d58b6-f37f-48e6-9919-8e14ec91f92a\",\n        \"name\": \"José Haley\",\n        \"position\": \"lineup\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"1ba715f2-caa3-44c0-9118-b045ea702a34\",\n        \"name\": \"Juan Rangel\",\n        \"position\": \"lineup\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"21cbbfaa-100e-48c5-9cea-7118b0d08a34\",\n        \"name\": \"Juice Collins\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"9c3273a0-2711-4958-b716-bfcf60857013\",\n        \"name\": \"Kathy Mathews\",\n        \"position\": \"lineup\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"5b9727f7-6a20-47d2-93d9-779f0a85c4ee\",\n        \"name\": \"Kennedy Alstott\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"66cebbbf-9933-4329-924a-72bd3718f321\",\n        \"name\": \"Kennedy Cena\",\n        \"position\": \"lineup\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"84a2b5f6-4955-4007-9299-3d35ae7135d3\",\n        \"name\": \"Kennedy Loser\",\n        \"position\": \"lineup\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"23110c0f-2cf9-4d9c-ab2d-634f2f18867e\",\n        \"name\": \"Kennedy Meh\",\n        \"position\": \"lineup\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"58c9e294-bd49-457c-883f-fb3162fc668e\",\n        \"name\": \"Kichiro Guerra\",\n        \"position\": \"lineup\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"97f5a9cd-72f0-413e-9e68-a6ee6a663489\",\n        \"name\": \"Kline Greenlemon\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"cbd19e6f-3d08-4734-b23f-585330028665\",\n        \"name\": \"Knight Urlacher\",\n        \"position\": \"lineup\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"9f85676a-7411-444a-8ae2-c7f8f73c285c\",\n        \"name\": \"Lachlan Shelton\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"d74a2473-1f29-40fa-a41e-66fa2281dfca\",\n        \"name\": \"Landry Violence\",\n        \"position\": \"lineup\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"da0bbbe6-d13c-40cc-9594-8c476975d93d\",\n        \"name\": \"Lang Richardson\",\n        \"position\": \"lineup\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"c83f0fe0-44d1-4342-81e8-944bb38f8e23\",\n        \"name\": \"Langley Wheeler\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"76c4853b-7fbc-4688-8cda-c5b8de1724e4\",\n        \"name\": \"Lars Mendoza\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"2b9f9c25-43ec-4f0b-9937-a5aa23be0d9e\",\n        \"name\": \"Lawrence Horne\",\n        \"position\": \"lineup\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"c22e3af5-9001-465f-b450-864d7db2b4a0\",\n        \"name\": \"Logan Horseman\",\n        \"position\": \"lineup\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"20e13b56-599b-4a22-b752-8059effc81dc\",\n        \"name\": \"Lou Roseheart\",\n        \"position\": \"lineup\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"425f3f84-bab0-4cf2-91c1-96e78cf5cd02\",\n        \"name\": \"Luis Acevedo\",\n        \"position\": \"lineup\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"1301ee81-406e-43d9-b2bb-55ca6e0f7765\",\n        \"name\": \"Malik Destiny\",\n        \"position\": \"lineup\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"f56657d3-3bdc-4840-a20c-91aca9cc360e\",\n        \"name\": \"Malik Romayne\",\n        \"position\": \"lineup\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"446a3366-3fe3-41bb-bfdd-d8717f2152a9\",\n        \"name\": \"Marco Escobar\",\n        \"position\": \"lineup\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"87e6ae4b-67de-4973-aa56-0fc9835a1e1e\",\n        \"name\": \"Marco Stink\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"718dea1a-d9a8-4c2b-933a-f0667b5250e6\",\n        \"name\": \"Margarito Nava\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"53e701c7-e3c8-4e18-ba05-9b41b4b64cda\",\n        \"name\": \"Marquez Clark\",\n        \"position\": \"lineup\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"ab9eb213-0917-4374-a259-458295045021\",\n        \"name\": \"Matheo Carpenter\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"63df8701-1871-4987-87d7-b55d4f1df2e9\",\n        \"name\": \"Mcdowell Mason\",\n        \"position\": \"lineup\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"a311c089-0df4-46bd-9f5d-8c45c7eb5ae2\",\n        \"name\": \"Mclaughlin Scorpler\",\n        \"position\": \"lineup\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"15ae64cd-f698-4b00-9d61-c9fffd037ae2\",\n        \"name\": \"Mickey Woods\",\n        \"position\": \"lineup\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"43bf6a6d-cc03-4bcf-938d-620e185433e1\",\n        \"name\": \"Miguel Javier\",\n        \"position\": \"lineup\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"cd68d3a6-7fbc-445d-90f1-970c955e32f4\",\n        \"name\": \"Miguel Wheeler\",\n        \"position\": \"lineup\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"90c6e6ca-77fc-42b7-94d8-d8afd6d299e5\",\n        \"name\": \"Miki Santana\",\n        \"position\": \"lineup\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"70ccff1e-6b53-40e2-8844-0a28621cb33e\",\n        \"name\": \"Moody Cookbook\",\n        \"position\": \"lineup\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"18798b8f-6391-4cb2-8a5f-6fb540d646d5\",\n        \"name\": \"Morrow Doyle\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"06ced607-7f96-41e7-a8cd-b501d11d1a7e\",\n        \"name\": \"Morrow Wilson\",\n        \"position\": \"lineup\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"75f9d874-5e69-438d-900d-a3fcb1d429b3\",\n        \"name\": \"Moses Mason\",\n        \"position\": \"lineup\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"2ca0c790-e1d5-4a14-ab3c-e9241c87fc23\",\n        \"name\": \"Murray Pony\",\n        \"position\": \"lineup\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"1f159bab-923a-4811-b6fa-02bfde50925a\",\n        \"name\": \"NaN\",\n        \"position\": \"lineup\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"c0732e36-3731-4f1a-abdc-daa9563b6506\",\n        \"name\": \"Nagomi Mcdaniel\",\n        \"position\": \"lineup\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"89f74891-2e25-4b5a-bd99-c95ba3f36aa0\",\n        \"name\": \"Nagomi Nava\",\n        \"position\": \"lineup\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"190a0f31-d686-4ac4-a7f3-cfc87b72c145\",\n        \"name\": \"Nerd Pacheco\",\n        \"position\": \"lineup\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"855775c1-266f-40f6-b07b-3a67ccdf8551\",\n        \"name\": \"Nic Winkler\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"7e9a514a-7850-4ed0-93ab-f3a6e2f41c03\",\n        \"name\": \"Nolanestophia Patterson\",\n        \"position\": \"lineup\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"8b53ce82-4b1a-48f0-999d-1774b3719202\",\n        \"name\": \"Oliver Mueller\",\n        \"position\": \"lineup\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"2b157c5c-9a6a-45a6-858f-bf4cf4cbc0bd\",\n        \"name\": \"Ortiz Lopez\",\n        \"position\": \"lineup\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"63512571-2eca-4bc4-8ad9-a5308a22ae22\",\n        \"name\": \"Oscar Dollie\",\n        \"position\": \"lineup\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"7dcf6902-632f-48c5-936a-7cf88802b93a\",\n        \"name\": \"Parker Parra\",\n        \"position\": \"lineup\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"a1ed3396-114a-40bc-9ff0-54d7e1ad1718\",\n        \"name\": \"Patel Beyonce\",\n        \"position\": \"lineup\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"c0177f76-67fc-4316-b650-894159dede45\",\n        \"name\": \"Paula Mason\",\n        \"position\": \"lineup\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"5bcfb3ff-5786-4c6c-964c-5c325fcc48d7\",\n        \"name\": \"Paula Turnip\",\n        \"position\": \"lineup\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"667cb445-c288-4e62-b603-27291c1e475d\",\n        \"name\": \"Peanut Holloway\",\n        \"position\": \"lineup\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"5ff66eae-7111-4e3b-a9b8-a9579165b0a5\",\n        \"name\": \"Peanutiel Duffy\",\n        \"position\": \"lineup\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"1a93a2d2-b5b6-479b-a595-703e4a2f3885\",\n        \"name\": \"Pedro Davids\",\n        \"position\": \"lineup\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"0c83e3b6-360e-4b7d-85e3-d906633c9ca0\",\n        \"name\": \"Penelope Mathews\",\n        \"position\": \"lineup\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"8604e861-d784-43f0-b0f8-0d43ea6f7814\",\n        \"name\": \"Randall Marijuana\",\n        \"position\": \"lineup\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"7932c7c7-babb-4245-b9f5-cdadb97c99fb\",\n        \"name\": \"Randy Castillo\",\n        \"position\": \"lineup\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"5a26fc61-d75d-4c01-9ce2-1880ffb5550f\",\n        \"name\": \"Randy Dennis\",\n        \"position\": \"lineup\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"bf6a24d1-4e89-4790-a4ba-eeb2870cbf6f\",\n        \"name\": \"Rat Mason\",\n        \"position\": \"lineup\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"2e6d4fa9-f930-47bd-971a-dd54a3cf7db1\",\n        \"name\": \"Raúl Leal\",\n        \"position\": \"lineup\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"503a235f-9fa6-41b5-8514-9475c944273f\",\n        \"name\": \"Reese Clark\",\n        \"position\": \"lineup\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"198fd9c8-cb75-482d-873e-e6b91d42a446\",\n        \"name\": \"Ren Hunter\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"32c9bce6-6e52-40fa-9f64-3629b3d026a8\",\n        \"name\": \"Ren Morin\",\n        \"position\": \"lineup\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"472f50c0-ef98-4d05-91d0-d6359eec3946\",\n        \"name\": \"Rhys Trombone\",\n        \"position\": \"lineup\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"b1b141fc-e867-40d1-842a-cea30a97ca4f\",\n        \"name\": \"Richardson Games\",\n        \"position\": \"lineup\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"a5adc84c-80b8-49e4-9962-8b4ade99a922\",\n        \"name\": \"Richardson Turquoise\",\n        \"position\": \"lineup\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"d4a10c2a-0c28-466a-9213-38ba3339b65e\",\n        \"name\": \"Richmond Harrison\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"4bf352d2-6a57-420a-9d45-b23b2b947375\",\n        \"name\": \"Rivers Rosa\",\n        \"position\": \"lineup\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"4b6f0a4e-de18-44ad-b497-03b1f470c43c\",\n        \"name\": \"Rodriguez Internet\",\n        \"position\": \"lineup\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"e4f1f358-ee1f-4466-863e-f329766279d0\",\n        \"name\": \"Ronan Combs\",\n        \"position\": \"lineup\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"82d1b7b4-ce00-4536-8631-a025f05150ce\",\n        \"name\": \"Sam Scandal\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"766dfd1e-11c3-42b6-a167-9b2d568b5dc0\",\n        \"name\": \"Sandie Turner\",\n        \"position\": \"lineup\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"4ffd2e50-bb5b-45d0-b7c4-e24d41b2ff5d\",\n        \"name\": \"Schneider Bendie\",\n        \"position\": \"lineup\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"4941976e-31fc-49b5-801a-18abe072178b\",\n        \"name\": \"Sebastian Sunshine\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"14d88771-7a96-48aa-ba59-07bae1733e96\",\n        \"name\": \"Sebastian Telephone\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"b4505c48-fc75-4f9e-8419-42b28dcc5273\",\n        \"name\": \"Sebastian Townsend\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"15d3a844-df6b-4193-a8f5-9ab129312d8d\",\n        \"name\": \"Sebastian Woodman\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"126fb128-7c53-45b5-ac2b-5dbf9943d71b\",\n        \"name\": \"Sigmund Castillo\",\n        \"position\": \"lineup\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"020ed630-8bae-4441-95cc-0e4ecc27253b\",\n        \"name\": \"Simon Haley\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"a38ada0a-aeac-4a3d-b9a5-968687ccd2f9\",\n        \"name\": \"Sixpack Santiago\",\n        \"position\": \"lineup\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"285ce77d-e5cd-4daa-9784-801347140d48\",\n        \"name\": \"Son Scotch\",\n        \"position\": \"lineup\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"c86b5add-6c9a-40e0-aa43-e4fd7dd4f2c7\",\n        \"name\": \"Sosa Elftower\",\n        \"position\": \"lineup\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"b7267aba-6114-4d53-a519-bf6c99f4e3a9\",\n        \"name\": \"Sosa Hayes\",\n        \"position\": \"lineup\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"13a05157-6172-4431-947b-a058217b4aa5\",\n        \"name\": \"Spears Taylor\",\n        \"position\": \"lineup\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"4f328502-d347-4d2c-8fad-6ae59431d781\",\n        \"name\": \"Stephens Lightner\",\n        \"position\": \"lineup\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"05bd08d5-7d9f-450b-abfa-1788b8ee8b91\",\n        \"name\": \"Stevenson Monstera\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"d47dd08e-833c-4302-a965-a391d345455c\",\n        \"name\": \"Stu Trololol\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"81a0889a-4606-4f49-b419-866b57331383\",\n        \"name\": \"Summers Pony\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"80e474a3-7d2b-431d-8192-2f1e27162607\",\n        \"name\": \"Summers Preston\",\n        \"position\": \"lineup\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"4ecee7be-93e4-4f04-b114-6b333e0e6408\",\n        \"name\": \"Sutton Dreamy\",\n        \"position\": \"lineup\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"4e6ad1a1-7c71-49de-8bd5-c286712faf9e\",\n        \"name\": \"Sutton Picklestein\",\n        \"position\": \"lineup\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"0f61d948-4f0c-4550-8410-ae1c7f9f5613\",\n        \"name\": \"Tamara Crankit\",\n        \"position\": \"lineup\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"8a6fc67d-a7fe-443b-a084-744294cec647\",\n        \"name\": \"Terrell Bradley\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"ee55248b-318a-4bfb-8894-1cc70e4e0720\",\n        \"name\": \"Theo King\",\n        \"position\": \"lineup\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"f3ddfd87-73a2-4681-96fe-829476c97886\",\n        \"name\": \"Theodore Duende\",\n        \"position\": \"lineup\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"4b3e8e9b-6de1-4840-8751-b1fb45dc5605\",\n        \"name\": \"Thomas Dracaena\",\n        \"position\": \"lineup\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"3a96d76a-c508-45a0-94a0-8f64cd6beeb4\",\n        \"name\": \"Thomas England\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"f73009c5-2ede-4dc4-b96d-84ba93c8a429\",\n        \"name\": \"Thomas Kirby\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"3d4545ed-6217-4d7a-9c4a-209265eb6404\",\n        \"name\": \"Tiana Cash\",\n        \"position\": \"lineup\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"90c2cec7-0ed5-426a-9de8-754f34d59b39\",\n        \"name\": \"Tot Fox\",\n        \"position\": \"lineup\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"70a458ed-25ca-4ff8-97fc-21cbf58f2c2a\",\n        \"name\": \"Trevino Merritt\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"d744f534-2352-472b-9e42-cd91fa540f1b\",\n        \"name\": \"Tyler Violet\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"c675fcdf-6117-49a6-ac32-99a89a3a88aa\",\n        \"name\": \"Valentine Games\",\n        \"position\": \"lineup\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"4ca52626-58cd-449d-88bb-f6d631588640\",\n        \"name\": \"Velasquez Alstott\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"8e1fd784-99d5-41c1-a6c5-6b947cec6714\",\n        \"name\": \"Velasquez Meadows\",\n        \"position\": \"lineup\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"2e13249e-38ff-46a2-a55e-d15fa692468a\",\n        \"name\": \"Vito Kravitz\",\n        \"position\": \"lineup\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"17392be2-7344-48a0-b4db-8a040a7fb532\",\n        \"name\": \"Washer Barajas\",\n        \"position\": \"lineup\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"f967d064-0eaf-4445-b225-daed700e044b\",\n        \"name\": \"Wesley Dudley\",\n        \"position\": \"lineup\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"e4e4c17d-8128-4704-9e04-f244d4573c4d\",\n        \"name\": \"Wesley Poole\",\n        \"position\": \"lineup\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"33fbfe23-37bd-4e37-a481-a87eadb8192d\",\n        \"name\": \"Whit Steakknife\",\n        \"position\": \"lineup\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"413b3ddb-d933-4567-a60e-6d157480239d\",\n        \"name\": \"Winnie Mccall\",\n        \"position\": \"lineup\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"bd4c6837-eeaa-4675-ae48-061efa0fd11a\",\n        \"name\": \"Workman Gloom\",\n        \"position\": \"lineup\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"ea44bd36-65b4-4f3b-ac71-78d87a540b48\",\n        \"name\": \"Wyatt Pothos\",\n        \"position\": \"lineup\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"5ca7e854-dc00-4955-9235-d7fcd732ddcf\",\n        \"name\": \"Wyatt Quitter\",\n        \"position\": \"lineup\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"ecb8d2f5-4ff5-4890-9693-5654e00055f6\",\n        \"name\": \"Yeong-Ho Benitez\",\n        \"position\": \"lineup\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"ce0e57a7-89f5-41ea-80f9-6e649dd54089\",\n        \"name\": \"Yong Wright\",\n        \"position\": \"lineup\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"86d4e22b-f107-4bcf-9625-32d387fcb521\",\n        \"name\": \"York Silk\",\n        \"position\": \"lineup\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"c83a13f6-ee66-4b1c-9747-faa67395a6f1\",\n        \"name\": \"Zi Delacruz\",\n        \"position\": \"lineup\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"2e86de11-a2dd-4b28-b5fe-f4d0c38cd20b\",\n        \"name\": \"Zion Aliciakeyes\",\n        \"position\": \"lineup\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"8c8cc584-199b-4b76-b2cd-eaa9a74965e5\",\n        \"name\": \"Ziwa Mueller\",\n        \"position\": \"lineup\",\n        \"team\": \"Canada Moist Talkers\"\n    }\n]","export const backupPitchers = [\n    {\n        \"id\": \"d0d7b8fe-bad8-481f-978e-cb659304ed49\",\n        \"name\": \"Adalberto Tosser\",\n        \"position\": \"rotation\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"f4a5d734-0ade-4410-abb6-c0cd5a7a1c26\",\n        \"name\": \"Agan Harrison\",\n        \"position\": \"rotation\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"f741dc01-2bae-4459-bfc0-f97536193eea\",\n        \"name\": \"Alejandro Leaf\",\n        \"position\": \"rotation\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"6f9de777-e812-4c84-915c-ef283c9f0cde\",\n        \"name\": \"Arturo Huerta\",\n        \"position\": \"rotation\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"d46abb00-c546-4952-9218-4f16084e3238\",\n        \"name\": \"Atlas Guerra\",\n        \"position\": \"rotation\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"ae81e172-801a-4236-929a-b990fc7190ce\",\n        \"name\": \"August Sky\",\n        \"position\": \"rotation\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"3af96a6b-866c-4b03-bc14-090acf6ecee5\",\n        \"name\": \"Axel Trololol\",\n        \"position\": \"rotation\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"9965eed5-086c-4977-9470-fe410f92d353\",\n        \"name\": \"Bates Bentley\",\n        \"position\": \"rotation\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"36786f44-9066-4028-98d9-4fa84465ab9e\",\n        \"name\": \"Beasley Gloom\",\n        \"position\": \"rotation\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"1732e623-ffc2-40f0-87ba-fdcf97131f1f\",\n        \"name\": \"Betsy Trombone\",\n        \"position\": \"rotation\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"60026a9d-fc9a-4f5a-94fd-2225398fa3da\",\n        \"name\": \"Bright Zimmerman\",\n        \"position\": \"rotation\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"97dfc1f6-ac94-4cdc-b0d5-1cb9f8984aa5\",\n        \"name\": \"Brock Forbes\",\n        \"position\": \"rotation\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"65273615-22d5-4df1-9a73-707b23e828d5\",\n        \"name\": \"Burke Gonzales\",\n        \"position\": \"rotation\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"1513aab6-142c-48c6-b43e-fbda65fd64e8\",\n        \"name\": \"Caleb Alvarado\",\n        \"position\": \"rotation\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"f3c07eaf-3d6c-4cc3-9e54-cbecc9c08286\",\n        \"name\": \"Campos Arias\",\n        \"position\": \"rotation\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"a647388d-fc59-4c1b-90d3-8c1826e07775\",\n        \"name\": \"Chambers Simmons\",\n        \"position\": \"rotation\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"740d5fef-d59f-4dac-9a75-739ec07f91cf\",\n        \"name\": \"Conner Haley\",\n        \"position\": \"rotation\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"03f920cc-411f-44ef-ae66-98a44e883291\",\n        \"name\": \"Cornelius Games\",\n        \"position\": \"rotation\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"2da49de2-34e5-49d0-b752-af2a2ee061be\",\n        \"name\": \"Cory Twelve\",\n        \"position\": \"rotation\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"09f2787a-3352-41a6-8810-d80e97b253b5\",\n        \"name\": \"Curry Aliciakeyes\",\n        \"position\": \"rotation\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"d2d76815-cbdc-4c4b-9c9e-32ebf2297cc7\",\n        \"name\": \"Denzel Scott\",\n        \"position\": \"rotation\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"0cc5bd39-e90d-42f9-9dd8-7e703f316436\",\n        \"name\": \"Don Elliott\",\n        \"position\": \"rotation\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"ceb8f8cd-80b2-47f0-b43e-4d885fa48aa4\",\n        \"name\": \"Donia Bailey\",\n        \"position\": \"rotation\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"7aeb8e0b-f6fb-4a9e-bba2-335dada5f0a3\",\n        \"name\": \"Dunlap Figueroa\",\n        \"position\": \"rotation\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"ff5a37d9-a6dd-49aa-b6fb-b935fd670820\",\n        \"name\": \"Dunn Keyes\",\n        \"position\": \"rotation\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"df4da81a-917b-434f-b309-f00423ee4967\",\n        \"name\": \"Eugenia Bickle\",\n        \"position\": \"rotation\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"a5f8ce83-02b2-498c-9e48-533a1d81aebf\",\n        \"name\": \"Evelton McBlase\",\n        \"position\": \"rotation\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"bca38809-81de-42ff-94e3-1c0ebfb1e797\",\n        \"name\": \"Famous Oconnor\",\n        \"position\": \"rotation\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"b3e512df-c411-4100-9544-0ceadddb28cf\",\n        \"name\": \"Famous Owens\",\n        \"position\": \"rotation\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"18af933a-4afa-4cba-bda5-45160f3af99b\",\n        \"name\": \"Felix Garbage\",\n        \"position\": \"rotation\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"2ae8cbfc-2155-4647-9996-3f2591091baf\",\n        \"name\": \"Forrest Bookbaby\",\n        \"position\": \"rotation\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"8903a74f-f322-41d2-bd75-dbf7563c4abb\",\n        \"name\": \"Francisca Sasquatch\",\n        \"position\": \"rotation\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"378c07b0-5645-44b5-869f-497d144c7b35\",\n        \"name\": \"Fynn Doyle\",\n        \"position\": \"rotation\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"94baa9ac-ff96-4f56-a987-10358e917d91\",\n        \"name\": \"Gabriel Griffith\",\n        \"position\": \"rotation\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"e6502bc7-5b76-4939-9fb8-132057390b30\",\n        \"name\": \"Greer Lott\",\n        \"position\": \"rotation\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"34267632-8c32-4a8b-b5e6-ce1568bb0639\",\n        \"name\": \"Gunther O'Brian\",\n        \"position\": \"rotation\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"c6e2e389-ed04-4626-a5ba-fe398fe89568\",\n        \"name\": \"Henry Marshallow\",\n        \"position\": \"rotation\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"2720559e-9173-4042-aaa0-d3852b72ab2e\",\n        \"name\": \"Hiroto Wilcox\",\n        \"position\": \"rotation\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"b6aa8ce8-2587-4627-83c1-2a48d44afaee\",\n        \"name\": \"Inky Rutledge\",\n        \"position\": \"rotation\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"167751d5-210c-4a6e-9568-e92d61bab185\",\n        \"name\": \"Jacob Winner\",\n        \"position\": \"rotation\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"89ec77d8-c186-4027-bd45-f407b4800c2c\",\n        \"name\": \"James Mora\",\n        \"position\": \"rotation\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"a691f2ba-9b69-41f8-892c-1acd42c336e4\",\n        \"name\": \"Jenkins Good\",\n        \"position\": \"rotation\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"30218684-7fa1-41a5-a3b3-5d9cd97dd36b\",\n        \"name\": \"Jordan Hildebert\",\n        \"position\": \"rotation\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"43d5da5f-c6a1-42f1-ab7f-50ea956b6cd5\",\n        \"name\": \"Justice Spoon\",\n        \"position\": \"rotation\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"7158d158-e7bf-4e9b-9259-62e5b25e3de8\",\n        \"name\": \"Karato Bean\",\n        \"position\": \"rotation\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"316abea7-9890-4fb8-aaea-86b35e24d9be\",\n        \"name\": \"Kennedy Rodgers\",\n        \"position\": \"rotation\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"9786b2c9-1205-4718-b0f7-fc000ce91106\",\n        \"name\": \"Kevin Dudley\",\n        \"position\": \"rotation\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"24f6829e-7bb4-4e1e-8b59-a07514657e72\",\n        \"name\": \"King Weatherman\",\n        \"position\": \"rotation\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"20fd71e7-4fa0-4132-9f47-06a314ed539a\",\n        \"name\": \"Lars Taylor\",\n        \"position\": \"rotation\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"b7ca8f3f-2fdc-477b-84f4-157f2802e9b5\",\n        \"name\": \"Leach Herman\",\n        \"position\": \"rotation\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"a199a681-decf-4433-b6ab-5454450bbe5e\",\n        \"name\": \"Leach Ingram\",\n        \"position\": \"rotation\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"8adb084b-19fe-4295-bcd2-f92afdb62bd7\",\n        \"name\": \"Logan Rodriguez\",\n        \"position\": \"rotation\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"b348c037-eefc-4b81-8edd-dfa96188a97e\",\n        \"name\": \"Lowe Forbes\",\n        \"position\": \"rotation\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"32551e28-3a40-47ae-aed1-ff5bc66be879\",\n        \"name\": \"Math Velazquez\",\n        \"position\": \"rotation\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"f9c0d3cb-d8be-4f53-94c9-fc53bcbce520\",\n        \"name\": \"Matteo Prestige\",\n        \"position\": \"rotation\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"333067fd-c2b4-4045-a9a4-e87a8d0332d0\",\n        \"name\": \"Miguel James\",\n        \"position\": \"rotation\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"c6a277c3-d2b5-4363-839b-950896a5ec5e\",\n        \"name\": \"Mike Townsend\",\n        \"position\": \"rotation\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"7c5ae357-e079-4427-a90f-97d164c7262e\",\n        \"name\": \"Milo Brown\",\n        \"position\": \"rotation\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"1ffb1153-909d-44c7-9df1-6ed3a9a45bbd\",\n        \"name\": \"Montgomery Bullock\",\n        \"position\": \"rotation\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"9ba361a1-16d5-4f30-b590-fc4fc2fb53d2\",\n        \"name\": \"Mooney Doctor\",\n        \"position\": \"rotation\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"16aff709-e855-47c8-8818-b9ba66e90fe8\",\n        \"name\": \"Mullen Peterson\",\n        \"position\": \"rotation\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"9abe02fb-2b5a-432f-b0af-176be6bd62cf\",\n        \"name\": \"Nagomi Meng\",\n        \"position\": \"rotation\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"b082ca6e-eb11-4eab-8d6a-30f8be522ec4\",\n        \"name\": \"Nicholas Mora\",\n        \"position\": \"rotation\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"d5b6b11d-3924-4634-bd50-76553f1f162b\",\n        \"name\": \"Ogden Mendoza\",\n        \"position\": \"rotation\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"542af915-79c5-431c-a271-f7185e37c6ae\",\n        \"name\": \"Oliver Notarobot\",\n        \"position\": \"rotation\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"d8742d68-8fce-4d52-9a49-f4e33bd2a6fc\",\n        \"name\": \"Ortiz Morse\",\n        \"position\": \"rotation\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"6b8d128f-ed51-496d-a965-6614476f8256\",\n        \"name\": \"Orville Manco\",\n        \"position\": \"rotation\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"138fccc3-e66f-4b07-8327-d4b6f372f654\",\n        \"name\": \"Oscar Vaughan\",\n        \"position\": \"rotation\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"dfd5ccbb-90ed-4bfe-83e0-dae9cc763f10\",\n        \"name\": \"Owen Picklestein\",\n        \"position\": \"rotation\",\n        \"team\": \"Boston Flowers\"\n    },\n    {\n        \"id\": \"73265ee3-bb35-40d1-b696-1f241a6f5966\",\n        \"name\": \"Parker Meng\",\n        \"position\": \"rotation\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"81d7d022-19d6-427d-aafc-031fcb79b29e\",\n        \"name\": \"Patty Fox\",\n        \"position\": \"rotation\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"80a2f015-9d40-426b-a4f6-b9911ba3add8\",\n        \"name\": \"Paul Barnes\",\n        \"position\": \"rotation\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"9820f2c5-f9da-4a07-b610-c2dd7bee2ef6\",\n        \"name\": \"Peanut Bong\",\n        \"position\": \"rotation\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"db33a54c-3934-478f-bad4-fc313ac2580e\",\n        \"name\": \"Percival Wheeler\",\n        \"position\": \"rotation\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"338694b7-6256-4724-86b6-3884299a5d9e\",\n        \"name\": \"PolkaDot Patterson\",\n        \"position\": \"rotation\",\n        \"team\": \"Canada Moist Talkers\"\n    },\n    {\n        \"id\": \"7663c3ca-40a1-4f13-a430-14637dce797a\",\n        \"name\": \"PolkaDot Zavala\",\n        \"position\": \"rotation\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"20be1c34-071d-40c6-8824-dde2af184b4d\",\n        \"name\": \"Qais Dogwalker\",\n        \"position\": \"rotation\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"7007cbd3-7c7b-44fd-9d6b-393e82b1c06e\",\n        \"name\": \"Rafael Davids\",\n        \"position\": \"rotation\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"af6b3edc-ed52-4edc-b0c9-14e0a5ae0ee3\",\n        \"name\": \"Rivers Clembons\",\n        \"position\": \"rotation\",\n        \"team\": \"Miami Dalé\"\n    },\n    {\n        \"id\": \"41949d4d-b151-4f46-8bf7-73119a48fac8\",\n        \"name\": \"Ron Monstera\",\n        \"position\": \"rotation\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"042962c8-4d8b-44a6-b854-6ccef3d82716\",\n        \"name\": \"Ronan Jaylee\",\n        \"position\": \"rotation\",\n        \"team\": \"Dallas Steaks\"\n    },\n    {\n        \"id\": \"814bae61-071a-449b-981e-e7afc839d6d6\",\n        \"name\": \"Ruslan Greatness\",\n        \"position\": \"rotation\",\n        \"team\": \"Philly Pies\"\n    },\n    {\n        \"id\": \"bd549bfe-b395-4dc0-8546-5c04c08e24a5\",\n        \"name\": \"Sam Solis\",\n        \"position\": \"rotation\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"f2c477fb-28ea-4fcb-943a-9fab22df3da0\",\n        \"name\": \"Sandford Garner\",\n        \"position\": \"rotation\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"5703141c-25d9-46d0-b680-0cf9cfbf4777\",\n        \"name\": \"Sandoval Crossing\",\n        \"position\": \"rotation\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"40db1b0b-6d04-4851-adab-dd6320ad2ed9\",\n        \"name\": \"Scrap Murphy\",\n        \"position\": \"rotation\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"0bb35615-63f2-4492-80ec-b6b322dc5450\",\n        \"name\": \"Sexton Wheerer\",\n        \"position\": \"rotation\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"089af518-e27c-4256-adc8-62e3f4b30f43\",\n        \"name\": \"Silvia Rugrat\",\n        \"position\": \"rotation\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"5e4dfa16-f1b9-400f-b8ef-a1613c2b026a\",\n        \"name\": \"Snyder Briggs\",\n        \"position\": \"rotation\",\n        \"team\": \"Charleston Shoe Thieves\"\n    },\n    {\n        \"id\": \"ad1e670a-f346-4bf7-a02f-a91649c41ccb\",\n        \"name\": \"Stephanie Winters\",\n        \"position\": \"rotation\",\n        \"team\": \"Mexico City Wild Wings\"\n    },\n    {\n        \"id\": \"7b55d484-6ea9-4670-8145-986cb9e32412\",\n        \"name\": \"Stevenson Heat\",\n        \"position\": \"rotation\",\n        \"team\": \"Hawaii Fridays\"\n    },\n    {\n        \"id\": \"c182f33c-aea5-48a2-97ed-dc74fa29b3c0\",\n        \"name\": \"Swamuel Mora\",\n        \"position\": \"rotation\",\n        \"team\": \"Chicago Firefighters\"\n    },\n    {\n        \"id\": \"ae4acebd-edb5-4d20-bf69-f2d5151312ff\",\n        \"name\": \"Theodore Cervantes\",\n        \"position\": \"rotation\",\n        \"team\": \"New York Millennials\"\n    },\n    {\n        \"id\": \"3a8c52d7-4124-4a65-a20d-d51abcbe6540\",\n        \"name\": \"Theodore Holloway\",\n        \"position\": \"rotation\",\n        \"team\": \"Houston Spies\"\n    },\n    {\n        \"id\": \"f70dd57b-55c4-4a62-a5ea-7cc4bf9d8ac1\",\n        \"name\": \"Tillman Henderson\",\n        \"position\": \"rotation\",\n        \"team\": \"Baltimore Crabs\"\n    },\n    {\n        \"id\": \"e3c514ae-f813-470e-9c91-d5baf5ffcf16\",\n        \"name\": \"Tot Clark\",\n        \"position\": \"rotation\",\n        \"team\": \"Seattle Garages\"\n    },\n    {\n        \"id\": \"bf122660-df52-4fc4-9e70-ee185423ff93\",\n        \"name\": \"Walton Sports\",\n        \"position\": \"rotation\",\n        \"team\": \"Breckenridge Jazz Hands\"\n    },\n    {\n        \"id\": \"f2a27a7e-bf04-4d31-86f5-16bfa3addbe7\",\n        \"name\": \"Winnie Hess\",\n        \"position\": \"rotation\",\n        \"team\": \"Kansas City Breath Mints\"\n    },\n    {\n        \"id\": \"0d5300f6-0966-430f-903f-a4c2338abf00\",\n        \"name\": \"Wyatt Dovenpart\",\n        \"position\": \"rotation\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"e16c3f28-eecd-4571-be1a-606bbac36b2b\",\n        \"name\": \"Wyatt Glover\",\n        \"position\": \"rotation\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"21d52455-6c2c-4ee4-8673-ab46b4b926b4\",\n        \"name\": \"Wyatt Owens\",\n        \"position\": \"rotation\",\n        \"team\": \"Unlimited Tacos\"\n    },\n    {\n        \"id\": \"afc90398-b891-4cdf-9dea-af8a3a79d793\",\n        \"name\": \"Yazmin Mason\",\n        \"position\": \"rotation\",\n        \"team\": \"Hades Tigers\"\n    },\n    {\n        \"id\": \"9397ed91-608e-4b13-98ea-e94c795f651e\",\n        \"name\": \"Yeong-Ho Garcia\",\n        \"position\": \"rotation\",\n        \"team\": \"Yellowstone Magic\"\n    },\n    {\n        \"id\": \"3c331c87-1634-46c4-87ce-e4b9c59e2969\",\n        \"name\": \"Yosh Carpenter\",\n        \"position\": \"rotation\",\n        \"team\": \"San Francisco Lovers\"\n    },\n    {\n        \"id\": \"3d3be7b8-1cbf-450d-8503-fce0daf46cbf\",\n        \"name\": \"Zack Sanders\",\n        \"position\": \"rotation\",\n        \"team\": \"Hellmouth Sunbeams\"\n    },\n    {\n        \"id\": \"3e008f60-6842-42e7-b125-b88c7e5c1a95\",\n        \"name\": \"Zeboriah Wilson\",\n        \"position\": \"rotation\",\n        \"team\": \"Boston Flowers\"\n    }\n];","import { backupBatters } from './BackupBatters';\nimport { backupPitchers } from './BackupPitchers';\n\nexport const bonusPlayers = [\n  {\n    \"id\": \"b86237bb-ade6-4b1d-9199-a3cc354118d9\",\n    \"name\": \"Hurley Pacheco\",\n    \"team\": \"Boston Flowers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"f9c0d3cb-d8be-4f53-94c9-fc53bcbce520\",\n    \"name\": \"Matteo Prestige\",\n    \"team\": \"Charleston Shoe Thieves\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"id\": \"8e1fd784-99d5-41c1-a6c5-6b947cec6714\",\n    \"name\": \"Velasquez Meadows\",\n    \"team\": \"Hellmouth Sunbeams\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"d5b6b11d-3924-4634-bd50-76553f1f162b\",\n    \"name\": \"Ogden Mendoza\",\n    \"team\": \"Breckenridge Jazz Hands\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"id\": \"76c4853b-7fbc-4688-8cda-c5b8de1724e4\",\n    \"name\": \"Lars Mendoza\",\n    \"team\": \"Dallas Steaks\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"70a458ed-25ca-4ff8-97fc-21cbf58f2c2a\",\n    \"name\": \"Trevino Merritt\",\n    \"team\": \"Canada Moist Talkers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"40db1b0b-6d04-4851-adab-dd6320ad2ed9\",\n    \"name\": \"Scrap Murphy\",\n    \"team\": \"New York Millennials\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"id\": \"80a2f015-9d40-426b-a4f6-b9911ba3add8\",\n    \"name\": \"Paul Barnes\",\n    \"team\": \"San Francisco Lovers\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"id\": \"03097200-0d48-4236-a3d2-8bdb153aa8f7\",\n    \"name\": \"Bennett Browning\",\n    \"team\": \"Seattle Garages\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"c83f0fe0-44d1-4342-81e8-944bb38f8e23\",\n    \"name\": \"Langley Wheeler\",\n    \"team\": \"Dallas Steaks\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"57448b62-f952-40e2-820c-48d8afe0f64d\",\n    \"name\": \"Jessi Wise\",\n    \"team\": \"Hawaii Fridays\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"6fc3689f-bb7d-4382-98a2-cf6ddc76909d\",\n    \"name\": \"Cedric Gonzalez\",\n    \"team\": \"Philly Pies\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"3afb30c1-1b12-466a-968a-5a9a21458c7f\",\n    \"name\": \"Dickerson Greatness\",\n    \"team\": \"Houston Spies\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"c83a13f6-ee66-4b1c-9747-faa67395a6f1\",\n    \"name\": \"Zi Delacruz\",\n    \"team\": \"Dallas Steaks\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"262c49c6-8301-487d-8356-747023fa46a9\",\n    \"name\": \"Alexandria Dracaena\",\n    \"team\": \"Breckenridge Jazz Hands\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"b3d518b9-dc68-4902-b68c-0022ceb25aa0\",\n    \"name\": \"Hendricks Rangel\",\n    \"team\": \"Hawaii Fridays\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"1ba715f2-caa3-44c0-9118-b045ea702a34\",\n    \"name\": \"Juan Rangel\",\n    \"team\": \"Philly Pies\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"2b1cb8a2-9eba-4fce-85cf-5d997ec45714\",\n    \"name\": \"Isaac Rubberman\",\n    \"team\": \"Boston Flowers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"90c6e6ca-77fc-42b7-94d8-d8afd6d299e5\",\n    \"name\": \"Miki Santana\",\n    \"team\": \"Houston Spies\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"bd549bfe-b395-4dc0-8546-5c04c08e24a5\",\n    \"name\": \"Sam Solis\",\n    \"team\": \"Hawaii Fridays\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"id\": \"a1628d97-16ca-4a75-b8df-569bae02bef9\",\n    \"name\": \"Chorby Soul\",\n    \"team\": \"New York Millennials\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"4941976e-31fc-49b5-801a-18abe072178b\",\n    \"name\": \"Sebastian Sunshine\",\n    \"team\": \"Hawaii Fridays\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"b4505c48-fc75-4f9e-8419-42b28dcc5273\",\n    \"name\": \"Sebastian Townsend\",\n    \"team\": \"Charleston Shoe Thieves\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"472f50c0-ef98-4d05-91d0-d6359eec3946\",\n    \"name\": \"Rhys Trombone\",\n    \"team\": \"Hellmouth Sunbeams\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"7b0f91aa-4d66-4362-993d-6ff60f7ce0ef\",\n    \"name\": \"Blankenship Fischer\",\n    \"team\": \"Charleston Shoe Thieves\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"5b9727f7-6a20-47d2-93d9-779f0a85c4ee\",\n    \"name\": \"Kennedy Alstott\",\n    \"team\": \"Canada Moist Talkers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"43bf6a6d-cc03-4bcf-938d-620e185433e1\",\n    \"name\": \"Miguel Javier\",\n    \"team\": \"San Francisco Lovers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"f44a8b27-85c1-44de-b129-1b0f60bcb99c\",\n    \"name\": \"Atlas Jonbois\",\n    \"team\": \"Charleston Shoe Thieves\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"c86b5add-6c9a-40e0-aa43-e4fd7dd4f2c7\",\n    \"name\": \"Sosa Elftower\",\n    \"team\": \"Yellowstone Magic\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"bca38809-81de-42ff-94e3-1c0ebfb1e797\",\n    \"name\": \"Famous Oconnor\",\n    \"team\": \"Yellowstone Magic\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"id\": \"773712f6-d76d-4caa-8a9b-56fe1d1a5a68\",\n    \"name\": \"Natha Kath\",\n    \"team\": \"Los Angeles Tacos\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"id\": \"3d4545ed-6217-4d7a-9c4a-209265eb6404\",\n    \"name\": \"Tiana Cash\",\n    \"team\": \"Seattle Garages\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"0fe896e1-108c-4ce9-97be-3470dde73c21\",\n    \"name\": \"Bryanayah Chang\",\n    \"team\": \"Boston Flowers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"d74a2473-1f29-40fa-a41e-66fa2281dfca\",\n    \"name\": \"Landry Violence\",\n    \"team\": \"Hades Tigers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"d744f534-2352-472b-9e42-cd91fa540f1b\",\n    \"name\": \"Tyler Violet\",\n    \"team\": \"Canada Moist Talkers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"id\": \"3064c7d6-91cc-4c2a-a433-1ce1aabc1ad4\",\n    \"name\": \"Jorge Ito\",\n    \"team\": \"Boston Flowers\",\n    \"position\": \"lineup\"\n  }\n];\n\nexport const backupPlayers = [\n  ...bonusPlayers,\n  ...backupPitchers,\n  ...backupBatters\n]\n\nexport default {\n    backupPlayers,\n    bonusPlayers,\n    backupBatters,\n    backupPitchers\n};","export const cacheKey = 'cache';\n\n/**\n * Clear localStorage cache\n */\nexport const clearCache = () => {\n    localStorage.removeItem(cacheKey);\n};\n\n/**\n * Load data from local storage via data key\n * @param {*} key\n */\nexport const loadData = (key) => {\n    try {\n        const serializedData = localStorage.getItem(key);\n\n        if (serializedData === null) {\n            return undefined;\n        }\n\n        return JSON.parse(serializedData);\n    } catch (error) {\n        return undefined;\n    }\n};\n\n/**\n * Save data to local storage\n * @param {*} key\n * @param {*} data\n */\nexport const saveData = (key, data) => {\n    try {\n        const serializedData = JSON.stringify(data);\n        localStorage.setItem(key, serializedData);\n    } catch (error) {\n        /* istanbul ignore next line */\n        return error;\n    }\n};\n","import { cacheKey, loadData, saveData } from './LocalStorage';\n\nconst cacheTTL = 60000;\n\nlet cachedPromises = {};\nlet cachedServices = {};\n\nconst checkCachedPromises = (dataKey) => cachedPromises[dataKey + 'Promise'];\n\nconst resetCachedPromise = (dataKey) => {\n    cachedPromises[dataKey + 'Promise'] = false;\n};\n\nconst checkCachedServices = (dataKey) => {\n    const inMemoryCache = cachedServices && cachedServices[dataKey];\n    const inMemoryData = inMemoryCache && inMemoryCache.data;\n    const currentTime = Date.parse(new Date());\n\n    if (inMemoryCache && currentTime <= inMemoryCache.expires) {\n        return inMemoryData;\n    } else {\n        const localStore = loadData(cacheKey);\n\n        const localCache = localStore && localStore[dataKey];\n        const localData = localCache && localCache.data;\n\n        if (localData && Date.parse(new Date()) <= localCache.expires) {\n            localStore && Object.entries(localStore).forEach(([key, storageItem]) => {\n                if (!cachedServices[key] || currentTime <= storageItem.expires) {\n                    cachedServices[key] = storageItem;\n                }\n            });\n\n            return localData;\n        }\n    }\n    return false;\n};\n\nexport function checkCache (dataKey) {\n    const cachedService = checkCachedServices(dataKey);\n\n    if (cachedService) {\n        return Promise.resolve(cachedService);\n    }\n\n    return checkCachedPromises(dataKey) || false;\n}\n\nexport function cachePromise (dataKey, promise) {\n    cachedPromises[dataKey + 'Promise'] = promise;\n    return promise;\n}\n\nexport function cacheService (dataKey, data) {\n    if (!data) { return data; }\n\n    const now = new Date();\n    const cacheData = {\n        data: data,\n        expires: now.setSeconds(now.getSeconds() + cacheTTL)\n    };\n\n    const originalCacheData = loadData(cacheKey);\n    const newCache = Object.assign({}, originalCacheData, {[dataKey]: cacheData});\n    saveData(cacheKey, newCache);\n    cachedServices[dataKey] = cacheData;\n\n    resetCachedPromise(dataKey);\n\n    return data;\n}\n\nexport default {\n    cachePromise,\n    cacheService,\n    checkCache\n};\n","import axios from 'axios';\nimport LodashGet from 'lodash/get';\nimport LodashFlatten from 'lodash/flatten';\nimport LodashSortBy from 'lodash/sortBy';\nimport LodashUniq from 'lodash/uniq';\n\nimport { bonusPlayers, backupPlayers } from './Players';\nimport { checkCache, cachePromise, cacheService } from './CachingManager';\n\nexport const getPlayers = (type) => {\n    return getPlayersFromBlaseball(type).then(data => LodashSortBy(LodashFlatten(data), ['name'])).catch((error) => getBackupPlayers(type));\n};\n\nexport const getGames = (season, day) => {\n    const dataKey = 'games' + season + day;\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get(`https://cors-anywhere.herokuapp.com/https://blaseball.com/database/games`, { params: { season, day }})\n        .then(response => cacheService(dataKey, response && response.data));\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getTeams = () => {\n    const dataKey = 'allTeams';\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get(`https://cors-anywhere.herokuapp.com/https://blaseball.com/database/allTeams`)\n        .then(response => cacheService(dataKey, response && response.data));\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getPlayersFromBlaseball = (type) => {\n    return getTeams().then(response => {\n        let teamPromises = response.map(team => processTeam(team, type));\n        return Promise.all(teamPromises);\n    });\n};\n\nconst processTeam = (team, type) => {\n    const dataKey = `${team.nickname}${type}Members`;\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n    const ids = LodashGet(team, type).join(',');\n    const results = axios.get(`https://cors-anywhere.herokuapp.com/https://blaseball.com/database/players`, { params: { ids: ids }})\n        .then(response => \n            cacheService(dataKey, \n                response && response.data && LodashUniq(response.data.map(player => getPlayerObject(player, team)).concat(getBonusPlayers(team, type)))\n            ));\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getPlayerObject = (player, team) => {\n    return {\n        value: player.id,\n        name: player.name,\n        searchkey: `${player.name} ${player.id} ${team.nickname}`,\n        label: `${player.name} (${String.fromCodePoint(team.emoji)} ${team.nickname})`,\n        team: team.fullName\n    };\n};\n\nconst getBackupPlayers = (type) => {\n    return backupPlayers.filter(player => !player.position.localeCompare(type)).map(player => ({\n        value: player.id,\n        name: player.name,\n        searchkey: `${player.name} ${player.id}`,\n        label: `${player.name}`,\n        team: player.team\n    }));\n};\n\nconst getBonusPlayers = (team, type) => {\n    return bonusPlayers.filter(player => !player.team.localeCompare(team.fullName) && !player.position.localeCompare(type))\n        .map(player => getPlayerObject(player, team));\n};\n\nexport default {\n    getPlayers,\n    getTeams,\n    getGames\n};\n","import axios from 'axios';\nimport LodashPickBy from 'lodash/pickBy';\nimport LodashOmit from 'lodash/omit';\nimport LodashIdentity from 'lodash/identity';\nimport LodashFind from 'lodash/find';\nimport LodashGet from 'lodash/get';\nimport { checkCache, cachePromise, cacheService } from './CachingManager';\n\nexport const getEvents = (params, players, teams) => {\n    const cleanedParams = LodashPickBy(params, LodashIdentity);\n    const dataKey = JSON.stringify(cleanedParams);\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get('https://api.blaseball-reference.com/v1/events', { params: cleanedParams })\n        .then(response => cacheService(dataKey, response && addEventCols(response.data, players, teams)))\n        .catch(/* istanbul ignore next */ error => Promise.reject(error));\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getPlayerAPI = (params, players, teams) => {\n    const cleanedParams = LodashPickBy(params, LodashIdentity);\n    const dataKey = JSON.stringify(cleanedParams);\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get('https://api.blaseball-reference.com/v1' + params.api, { params: LodashOmit(cleanedParams, ['api']) })\n        .then(response => cacheService(dataKey, response && addPlayerCols(response.data, players, teams)))\n        .catch(/* istanbul ignore next */ error => Promise.reject(error));\n\n    return cachePromise(dataKey, results);\n};\n\nconst renderPlayer = (playerId, players) => {\n  return LodashGet(LodashFind(players, { 'value': playerId}), 'name', playerId)\n};\n\nconst renderPlayerTeam = (playerId, players) => {\n  return LodashGet(LodashFind(players, { 'value': playerId}), 'team', '')\n};\n\nconst renderTeam = (teamId, teams) => {\n  const team = LodashFind(teams, { 'id': teamId});\n  return `${String.fromCodePoint(LodashGet(team, 'emoji', ''))} ${LodashGet(team, 'fullName', teamId)}`\n};\n\nconst addEventCols = (data, players, teams) => {\n    const { results, ...remainder } = data;\n    return {\n        results: results.map(row => {\n            const newValues = {\n                key: row.id,\n                batter_team_name: row.batter_team_id ? renderTeam(row.batter_team_id, teams) : '',\n                pitcher_team_name: row.pitcher_team_id ? renderTeam(row.pitcher_team_id, teams) : '',\n                batter_name: row.batter_id ? renderPlayer(row.batter_id, players) : '',\n                pitcher_name: row.pitcher_id ? renderPlayer(row.pitcher_id, players) : ''\n            };\n            return {...row, ...newValues};\n        }),\n        ...remainder\n    };\n};\n\nconst addPlayerCols = (data, players, teams) => {\n    const { results, ...remainder } = data;\n    return {\n        results: results.map((row, index) => {\n            const newValues = {\n                key: `${row.batter_id}-${index}`,\n                batter_team_name: row.batter_id ? renderPlayerTeam(row.batter_id, players) : '',\n                pitcher_team_name: row.pitcher_id ? renderPlayerTeam(row.pitcher_id, players) : '',\n                batter_name: row.batter_id ? renderPlayer(row.batter_id, players) : '',\n                pitcher_name: row.pitcher_id ? renderPlayer(row.pitcher_id, players) : ''\n            };\n            return {...row, ...newValues};\n        }),\n        ...remainder\n    };\n};\n\nexport default {\n    getEvents,\n    getPlayerAPI\n};\n","export const gameEvents = [\n    {\n        value: 'UNKNOWN',\n        text: 'Unknown'\n    }, {\n        value: 'NONE',\n        text: 'None'\n    }, {\n        value: 'OUT',\n        text: 'Out'\n    }, {\n        value: 'STRIKEOUT',\n        text: 'Strikeout'\n    }, {\n        value: 'STOLEN_BASE',\n        text: 'Stolen Base'\n    }, {\n        value: 'CAUGHT_STEALING',\n        text: 'Caught Stealing'\n    }, {\n        value: 'PICKOFF',\n        text: 'Pickoff'\n    }, {\n        value: 'WILD_PITCH',\n        text: 'Wild Pitch'\n    }, {\n        value: 'BALK',\n        text: 'Balk'\n    }, {\n        value: 'OTHER_ADVANCE',\n        text: 'Other Advance'\n    }, {\n        value: 'WALK',\n        text: 'Walk'\n    }, {\n        value: 'INTENTIONAL_WALK',\n        text: 'Intentional Walk'\n    }, {\n        value: 'HIT_BY_PITCH',\n        text: 'Hit By Pitch'\n    }, {\n        value: 'FIELDERS_CHOICE',\n        text: 'Fielders Choice'\n    }, {\n        value: 'SINGLE',\n        text: 'Single'\n    }, {\n        value: 'DOUBLE',\n        text: 'Double'\n    }, {\n        value: 'TRIPLE',\n        text: 'Triple'\n    }, {\n        value: 'HOME_RUN',\n        text: 'Home Run'\n    }\n];\n\nexport const playerEvents = [\n    {\n        value: 'INCINERATION',\n        text: 'Incineration'\n    }, {\n        value: 'PEANUT_GOOD',\n        text: 'Peanut (Yummy Reaction)'\n    }, {\n        value: 'PEANUT_BAD',\n        text: 'Peanut (Allergic Reaction)'\n    }\n];\n\nexport default {\n    gameEvents,\n    playerEvents\n};","import React from 'react';\nimport { gameEvents } from './EventsConfig';\nimport { Button, Input, Space } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport LodashFind from 'lodash/find';\nimport LodashGet from 'lodash/get';\nimport LodashSortBy from 'lodash/sortBy';\n\nexport const renderEvents = (eventId) => {\n  return LodashGet(LodashFind(gameEvents, { 'value': eventId}), 'text', eventId);\n};\n\nexport const renderArray = (array) => {\n  return array.map(line => (<div>{line}</div>));\n};\n\nexport const renderPlayer = (playerId, players) => {\n  return LodashGet(LodashFind(players, { 'value': playerId}), 'label', playerId)\n};\n\nexport const renderTeam = (teamId, teams) => {\n  const team = LodashFind(teams, { 'id': teamId});\n  return `${String.fromCodePoint(LodashGet(team, 'emoji', ''))} ${LodashGet(team, 'nickname', teamId)}`\n};\n\nconst getColumnAlphaSortProps = (field_name) => ({\n  sorter: (a, b) => LodashGet(a, field_name, '').localeCompare(LodashGet(b, field_name, ''))\n});\n\nconst getColumnNumericalSortProps = (field_name) => ({\n  sorter: (a, b) => LodashGet(a, field_name) - LodashGet(b, field_name),\n});\n\nconst getColumnPlayerFilterProps = (players, field_name) => ({\n  filters: players.map(row => { return { value: row.name, text: row.name } }),\n  onFilter: (value, record) => value.localeCompare(LodashGet(record, field_name)) === 0\n});\n\nconst getColumnTeamFilterProps = (teams, field_name) => ({\n  filters: LodashSortBy(teams.map(row => { return { value: row.nickname, text: row.fullName } }), ['text']),\n  onFilter: (value, record) => LodashGet(record, field_name).includes(value)\n});\n\nconst getColumnSearchProps = (dataIndex, searchInput, handleSearch, handleReset) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    }\n  });\n\nconst getColumnNumericalSortAndSearchProps = (field_name, searchInput, handleSearch, handleReset) => ({\n  sorter: (a, b) => LodashGet(a, field_name) - LodashGet(b, field_name),\n  ...getColumnSearchProps(field_name, searchInput, handleSearch, handleReset)\n});\n\nexport const gameEventColumns = (batters, pitchers, teams, searchInput, handleSearch, handleReset) => {\n  return [\n    {\n      'dataIndex': 'id',\n      'title': 'ID',\n      ...getColumnNumericalSortAndSearchProps('id')\n    },\n    {\n      'dataIndex': 'game_id',\n      'title': 'Game ID',\n      ...getColumnSearchProps('game_id', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'event_type',\n      'title': 'Event Type',\n      'render': (text, record, index) => renderEvents(text),\n      'filters': gameEvents,\n      'onFilter': (value, record) => value.localeCompare(record.event_type) === 0,\n      ...getColumnAlphaSortProps('event_type')\n    },\n    {\n      'dataIndex': 'event_text',\n      'title': 'Event Text',\n      'render': (text, record, index) => renderArray(text),\n      'width': 200,\n      ...getColumnSearchProps('event_text', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'batter_name',\n      'title': 'Batter Name',\n      ...getColumnPlayerFilterProps(batters, 'batter_name'),\n      ...getColumnAlphaSortProps('batter_name')\n    },\n    {\n      'dataIndex': 'batter_team_name',\n      'title': 'Batter Team Name',\n      ...getColumnTeamFilterProps(teams, 'batter_team_name'),\n      ...getColumnAlphaSortProps('batter_team_name')\n    },\n    {\n      'dataIndex': 'pitcher_name',\n      'title': 'Pitcher Name',\n      ...getColumnPlayerFilterProps(pitchers, 'pitcher_name'),\n      ...getColumnAlphaSortProps('pitcher_name')\n    },\n    {\n      'dataIndex': 'pitcher_team_name',\n      'title': 'Pitcher Team Name',\n      ...getColumnTeamFilterProps(teams, 'pitcher_team_name'),\n      ...getColumnAlphaSortProps('pitcher_team_name')\n    },\n    {\n      'dataIndex': 'inning',\n      'title': 'Inning',\n      ...getColumnNumericalSortAndSearchProps('inning')\n    },\n    {\n      'dataIndex': 'home_score',\n      'title': 'Home Score',\n      ...getColumnNumericalSortAndSearchProps('home_score'),\n    },\n    {\n      'dataIndex': 'away_score',\n      'title': 'Away Score',\n      ...getColumnNumericalSortAndSearchProps('away_score'),\n    },\n    {\n      'dataIndex': 'home_strike_count',\n      'title': 'Home Strike Count',\n      ...getColumnNumericalSortAndSearchProps('home_strike_count'),\n    },\n    {\n      'dataIndex': 'away_strike_count',\n      'title': 'Away Strike Count',\n      ...getColumnNumericalSortAndSearchProps('away_strike_count'),\n    },\n    {\n      'dataIndex': 'outs_before_play',\n      'title': 'Outs before Play',\n      ...getColumnNumericalSortAndSearchProps('outs_before_play'),\n    },\n    {\n      'dataIndex': 'batter_count',\n      'title': 'Batter Count',\n      ...getColumnNumericalSortAndSearchProps('batter_count'),\n    },\n    {\n      'dataIndex': 'pitches',\n      'title': 'Pitches',\n      ...getColumnAlphaSortProps(['pitches', 0]),\n      'sorter': (a, b) => LodashGet(a, 'pitches', []).join('').localeCompare(LodashGet(b, 'pitches', []).join('')),\n      ...getColumnSearchProps('pitches', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'total_strikes',\n      'title': 'Total Strikes',\n      ...getColumnNumericalSortAndSearchProps('total_strikes'),\n    },\n    {\n      'dataIndex': 'total_balls',\n      'title': 'Total Balls',\n      ...getColumnNumericalSortAndSearchProps('total_balls'),\n    },\n    {\n      'dataIndex': 'bases_hit',\n      'title': 'Bases Hit',\n      ...getColumnNumericalSortAndSearchProps('bases_hit'),\n    },\n    {\n      'dataIndex': 'runs_batted_in',\n      'title': 'Runs Batted In',\n      ...getColumnNumericalSortAndSearchProps('runs_batted_in'),\n    },\n    {\n      'dataIndex': 'outs_on_play',\n      'title': 'Outs on Play',\n      ...getColumnNumericalSortAndSearchProps('outs_on_play'),\n    },\n    {\n      'dataIndex': 'errors_on_play',\n      'title': 'Errors on Play',\n      ...getColumnNumericalSortAndSearchProps('errors_on_play'),\n      ...getColumnSearchProps('errors_on_play', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'batter_base_after_play',\n      'title': 'Batter Base After Play',\n      ...getColumnNumericalSortAndSearchProps('batter_base_after_play')\n    },\n    {\n      'dataIndex': 'additional_context',\n      'title': 'Additional Context',\n      ...getColumnSearchProps('additional_context', searchInput, handleSearch, handleReset)\n    }\n  ];\n};\n\nexport const batterStatColumns = (batters, teams, searchInput, handleSearch, handleReset) => {\n    return [\n      {\n        'dataIndex': 'api',\n        'title': 'API',\n        ...getColumnAlphaSortProps('api'),\n        ...getColumnSearchProps('api', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'batter_id',\n        'title': 'Batter ID',\n        ...getColumnAlphaSortProps('batter_id'),\n        ...getColumnSearchProps('batter_id', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'batter_name',\n        'title': 'Batter Name',\n        ...getColumnAlphaSortProps('batter_name'),\n        ...getColumnPlayerFilterProps(batters, 'batter_name')\n      },\n      {\n        'dataIndex': 'batter_team_name',\n        'title': 'Batter Team Name',\n        ...getColumnAlphaSortProps('batter_team_name'),\n        ...getColumnTeamFilterProps(teams, 'batter_team_name')\n      },\n      {\n        'dataIndex': 'count',\n        'title': 'Count',\n        ...getColumnNumericalSortProps('count'),\n        ...getColumnSearchProps('count', searchInput, handleSearch, handleReset)\n      }\n    ];\n};\n\nexport const pitcherStatColumns = (pitchers, teams, searchInput, handleSearch, handleReset) => {\n    return [\n      {\n        'dataIndex': 'api',\n        'title': 'API',\n        ...getColumnAlphaSortProps('api'),\n        ...getColumnSearchProps('api', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'pitcher_id',\n        'title': 'Pitcher ID',\n        ...getColumnAlphaSortProps('pitcher_id'),\n        ...getColumnSearchProps('pitcher_id', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'pitcher_name',\n        'title': 'Pitcher Name',\n        ...getColumnAlphaSortProps('pitcher_name'),\n        ...getColumnPlayerFilterProps(pitchers, 'pitcher_name')\n      },\n      {\n        'dataIndex': 'pitcher_team_name',\n        'title': 'Pitcher Team Name',\n        ...getColumnAlphaSortProps('pitcher_team_name'),\n        ...getColumnTeamFilterProps(teams, 'pitcher_team_name')\n      },\n      {\n        'dataIndex': 'count',\n        'title': 'Count',\n        ...getColumnNumericalSortProps('count'),\n        ...getColumnSearchProps('count', searchInput, handleSearch, handleReset)\n      }\n    ];\n};\n\nexport const gameAPIColumns = (batters, pitchers, teams, searchInput, handleSearch, handleReset) => {\n    return [\n      {\n        'dataIndex': 'id',\n        'title': 'id'\n      },\n      {\n        'dataIndex': 'season',\n        'title': 'season',\n        'render': (text, record, index) => text+1\n      },\n      {\n        'dataIndex': 'day',\n        'title': 'day',\n        'render': (text, record, index) => text+1\n      },\n      {\n        'dataIndex': 'homeTeam',\n        'title': 'homeTeam',\n        'render': (text, record, index) => renderTeam(text, teams),\n        ...getColumnTeamFilterProps(teams, 'homeTeam'),\n        ...getColumnAlphaSortProps('homeTeam')\n      },\n      {\n        'dataIndex': 'awayTeam',\n        'title': 'awayTeam',\n        'render': (text, record, index) => renderTeam(text, teams),\n        ...getColumnTeamFilterProps(teams, 'awayTeam'),\n        ...getColumnAlphaSortProps('awayTeam')\n      },\n      {\n        'dataIndex': 'homeScore',\n        'title': 'homeScore',\n        ...getColumnNumericalSortAndSearchProps('homeScore')\n      },\n      {\n        'dataIndex': 'awayScore',\n        'title': 'awayScore',\n        ...getColumnNumericalSortAndSearchProps('awayScore')\n      },\n      {\n        'dataIndex': 'homeOdds',\n        'title': 'homeOdds',\n        ...getColumnNumericalSortAndSearchProps('homeOdds')\n      },\n      {\n        'dataIndex': 'awayOdds',\n        'title': 'awayOdds',\n        ...getColumnNumericalSortAndSearchProps('awayOdds')\n      },\n      {\n        'dataIndex': 'homePitcher',\n        'title': 'homePitcher',\n        'render': (text, record, index) => renderPlayer(text, pitchers),\n        ...getColumnPlayerFilterProps(pitchers, 'homePitcher'),\n        ...getColumnAlphaSortProps('homePitcher')\n      },\n      {\n        'dataIndex': 'awayPitcher',\n        'title': 'awayPitcher',\n        'render': (text, record, index) => renderPlayer(text, pitchers),\n        ...getColumnPlayerFilterProps(pitchers, 'awayPitcher'),\n        ...getColumnAlphaSortProps('awayPitcher')\n      },\n      {\n        'dataIndex': 'homeStrikes',\n        'title': 'homeStrikes',\n        ...getColumnNumericalSortAndSearchProps('homeStrikes')\n      },\n      {\n        'dataIndex': 'awayStrikes',\n        'title': 'awayStrikes',\n        ...getColumnNumericalSortAndSearchProps('awayStrikes')\n      },\n      {\n        'dataIndex': 'inning',\n        'title': 'inning',\n        ...getColumnNumericalSortAndSearchProps('inning')\n      },\n      {\n        'dataIndex': 'outcomes',\n        'title': 'outcomes'\n      },\n      {\n        'dataIndex': 'shame',\n        'title': 'shame'\n      },\n      {\n        'dataIndex': 'weather',\n        'title': 'weather'\n      }\n    ];\n};\n\nexport default {\n    gameAPIColumns,\n    gameEventColumns,\n    batterStatColumns,\n    pitcherStatColumns\n};","import React from 'react';\nimport { Alert, Button, Form, Input, Select, Table, Layout } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport Blaseball from './services/Blaseball';\nimport sibr from './services/SIBR';\nimport { gameEventColumns } from './config/ColumnsConfig';\n\nconst formLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n};\n\nconst tableLayout = {\n    bordered: true,\n    scroll: { x: 'max-content' }\n};\n\nclass Events extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { results: null, batters: [], pitchers: [], teams: [], searchText: '', searchedColumn: '' };\n        this.onFinish = this.onFinish.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('lineup').then(/* istanbul ignore next */ data => {\n            data && this.setState({ batters: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('rotation').then(/* istanbul ignore next */ data => {\n            data && this.setState({ pitchers: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    onFinish (values) {\n        const { batters, pitchers, teams } = this.state;\n        const players = [...batters, ...pitchers];\n\n        if (values.gameId || values.pitcherId || values.batterId) {\n            return sibr.getEvents(values, players, teams)\n                .then(results => {\n                    console.log(results);\n                    this.setState({ results: results && results.results, error: null });\n                })\n                .catch(/* istanbul ignore next */ error => this.setState({ error }));\n        } else {\n            this.setState({ error: 'You need to select at least one of these three fields!' });\n        }\n    }\n\n    handleSearch (selectedKeys, confirm, dataIndex) {\n        confirm();\n        this.setState({ searchText: selectedKeys[0], searchedColumn: dataIndex });\n    }\n\n    handleReset (clearFilters) {\n        clearFilters();\n        this.setState({ searchText: '' });\n    }\n\n    render () {\n      const { error, results, batters, pitchers, teams, searchInput } = this.state;\n      const csvLink = results && results.length ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n      const errorMessage = error ? <Alert closable message={error} type='error' /> : '';\n      return (\n            <Layout.Content>\n                { errorMessage }\n                <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                    <Form.Item name='gameId' label='Game'>\n                        <Input placeholder='dc767612-eb77-417b-8d2f-c21eb4dab868' />\n                    </Form.Item>\n                    <Form.Item name='pitcherId' label='Pitcher'>\n                        <Select placeholder='Pitcher' options={pitchers} showSearch allowClear optionFilterProp='searchkey' />\n                    </Form.Item>\n                    <Form.Item name='batterId' label='Batter'>\n                        <Select placeholder='Batter' options={batters} showSearch allowClear optionFilterProp='searchkey' />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type='primary' htmlType='submit'>\n                          Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div className='results-list'>\n                    {csvLink}\n                    <Table dataSource={results} \n                        columns={gameEventColumns(batters, pitchers, teams, searchInput, this.handleSearch, this.handleReset)}\n                        {...tableLayout} />\n                </div>\n            </Layout.Content>\n      );\n    }\n}\n\nexport default Events;\n","export const batterAPIs = [\n    {\n        value: '/plateAppearances',\n        label: '/plateAppearances'\n    },\n    {\n        value: '/atBats',\n        label: '/atBats'\n    },\n    {\n        value: '/hits',\n        label: '/hits'\n    },\n    {\n        value: '/timesOnBase',\n        label: '/timesOnBase'\n    },\n    {\n        value: '/battingAverage',\n        label: '/battingAverage'\n    },\n    {\n        value: '/onBasePercentage',\n        label: '/onBasePercentage'\n    },\n    {\n        value: '/onBasePlusSlugging',\n        label: '/onBasePlusSlugging'\n    },\n    {\n        value: '/slugging',\n        label: '/slugging'\n    }\n];\n\nexport const pitcherAPIs = [\n    {\n        value: '/outsRecorded',\n        label: '/outsRecorded'\n    },\n    {\n        value: '/hitsRecorded',\n        label: '/hitsRecorded'\n    },\n    {\n        value: '/walksRecorded',\n        label: '/walksRecorded'\n    },\n    {\n        value: '/earnedRuns',\n        label: '/earnedRuns'\n    },\n    {\n        value: '/whip',\n        label: '/whip'\n    },\n    {\n        value: '/era',\n        label: '/era'\n    }\n];\n\nexport default {\n    batterAPIs,\n    pitcherAPIs\n};","import React from 'react';\nimport { Alert, Button, Form, Select, Layout, Table } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport LodashUniqWith from 'lodash/uniqWith';\nimport LodashIsEq from 'lodash/isEqual';\n\nimport Blaseball from './services/Blaseball';\nimport sibr from './services/SIBR';\nimport { batterAPIs } from './config/APIConfig';\nimport { batterStatColumns } from './config/ColumnsConfig';\n\nconst formLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n};\n\nclass BatterStats extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { error: null, batters: [], teams: [], results: [] };\n        this.onFinish = this.onFinish.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('lineup').then(/* istanbul ignore next */ data => {\n            data && this.setState({ batters: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    onFinish (values) {\n        const { batters, teams } = this.state;\n\n        if (values.api) {\n            return sibr.getPlayerAPI(values, batters, teams)\n                .then(results => {\n                    console.log(results);\n                    if (results && results.results) {\n                        const newResultsWithAPI = results.results.map(result => { return {...result, api: values.api }});\n                        this.setState({results: LodashUniqWith(this.state.results.concat(newResultsWithAPI), LodashIsEq), error: null });\n                    }\n                })\n                .catch(/* istanbul ignore next */ error => this.setState({ error }));\n        } else {\n            this.setState({ error: 'You need to select an API!' });\n        }\n    }\n\n    handleSearch (selectedKeys, confirm, dataIndex) {\n        confirm();\n        this.setState({ searchText: selectedKeys[0], searchedColumn: dataIndex });\n    }\n\n    handleReset (clearFilters) {\n        clearFilters();\n        this.setState({ searchText: '' });\n    }\n\n    render () {\n      const { error, batters, teams, results, searchInput } = this.state;\n      const csvLink = results && results.length ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n      const errorMessage = error ? <Alert closable message={error} type='error' /> : '';\n\n      return (\n            <Layout.Content>\n                { errorMessage }\n                <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                    <Form.Item name='api' label='API'>\n                        <Select placeholder='API' required options={batterAPIs} showSearch allowClear />\n                    </Form.Item>\n                    <Form.Item name='batterId' label='Batter'>\n                        <Select placeholder='Batter' options={batters} showSearch allowClear optionFilterProp='searchKey' />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type='primary' htmlType='submit'>\n                          Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div className='results-list'>\n                    {csvLink}\n                    <Table dataSource={results}\n                        bordered\n                        scroll={{ x: 'max-content' }}\n                        columns={batterStatColumns(batters, teams, searchInput, this.handleSearch, this.handleReset)}\n                        />\n                </div>\n            </Layout.Content>\n      );\n    }\n}\n\nexport default BatterStats;\n","import React from 'react';\nimport { Alert, Button, Form, Select, Layout, Table } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport LodashUniqWith from 'lodash/uniqWith';\nimport LodashIsEq from 'lodash/isEqual';\n\nimport Blaseball from './services/Blaseball';\nimport sibr from './services/SIBR';\nimport { pitcherAPIs } from './config/APIConfig';\nimport { pitcherStatColumns } from './config/ColumnsConfig';\n\nconst formLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n};\n\nclass PitcherStats extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { error: null, pitchers: [], teams: [], results: [] };\n        this.onFinish = this.onFinish.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('rotation').then(/* istanbul ignore next */ data => {\n            data && this.setState({ pitchers: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    onFinish (values) {\n        const { pitchers, teams } = this.state;\n\n        if (values.api) {\n            return sibr.getPlayerAPI(values, pitchers, teams)\n                .then(results => {\n                    console.log(results);\n                    if (results && results.results) {\n                        const newResultsWithAPI = results.results.map(result => { return {...result, api: values.api }});\n                        this.setState({results: LodashUniqWith(this.state.results.concat(newResultsWithAPI), LodashIsEq), error: null });\n                    }\n                })\n                .catch(/* istanbul ignore next */ error => this.setState({ error }));\n        } else {\n            this.setState({ error: 'You need to select an API!' });\n        }\n    }\n\n    handleSearch (selectedKeys, confirm, dataIndex) {\n        confirm();\n        this.setState({ searchText: selectedKeys[0], searchedColumn: dataIndex });\n    }\n\n    handleReset (clearFilters) {\n        clearFilters();\n        this.setState({ searchText: '' });\n    }\n\n    render () {\n      const { error, pitchers, teams, results, searchInput } = this.state;\n      const csvLink = results && results.length ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n      const errorMessage = error ? <Alert closable message={error} type='error' /> : '';\n\n      return (\n            <Layout.Content>\n                { errorMessage }\n                <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                    <Form.Item name='api' label='API'>\n                        <Select placeholder='API' required options={pitcherAPIs} showSearch allowClear />\n                    </Form.Item>\n                    <Form.Item name='pitcherId' label='Pitcher'>\n                        <Select placeholder='Pitcher' options={pitchers} showSearch allowClear optionFilterProp='searchKey' />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type='primary' htmlType='submit'>\n                          Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div className='results-list'>\n                    {csvLink}\n                    <Table dataSource={results} \n                        bordered\n                        scroll={{ x: 'max-content' }}\n                        columns={pitcherStatColumns(pitchers, teams, searchInput, this.handleSearch, this.handleReset)}\n                        />\n                </div>\n            </Layout.Content>\n      );\n    }\n}\n\nexport default PitcherStats;\n","import React from 'react';\nimport { Alert, Button, Form, InputNumber, Layout, Table } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport LodashUniqWith from 'lodash/uniqWith';\nimport LodashIsEq from 'lodash/isEqual';\nimport { gameAPIColumns } from './config/ColumnsConfig';\n\nimport Blaseball from './services/Blaseball';\n\nconst formLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n};\n\nclass Games extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { error: null, pitchers: [], teams: [], results: [] };\n        this.onFinish = this.onFinish.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('lineup').then(/* istanbul ignore next */ data => {\n            data && this.setState({ batters: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('rotation').then(/* istanbul ignore next */ data => {\n            data && this.setState({ pitchers: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    onFinish (values) {\n        if (values.season && values.day) {\n            return Blaseball.getGames(parseInt(values.season) - 1, parseInt(values.day) - 1)\n                .then(results => {\n                    this.setState({results: LodashUniqWith(results.concat(this.state.results), LodashIsEq), error: null });\n                })\n                .catch(/* istanbul ignore next */ error => this.setState({ error }));\n        }\n    }\n\n    handleSearch (selectedKeys, confirm, dataIndex) {\n        confirm();\n        this.setState({ searchText: selectedKeys[0], searchedColumn: dataIndex });\n    }\n\n    handleReset (clearFilters) {\n        clearFilters();\n        this.setState({ searchText: '' });\n    }\n\n    render () {\n      const { batters, pitchers, teams, error, results, searchInput } = this.state;\n      const csvLink = results && results.length ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n      const errorMessage = error ? <Alert closable message={error} type='error' /> : '';\n\n      return (\n            <Layout.Content>\n                { errorMessage }\n                <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                    <Form.Item name='season' label='Season' initialValue={4}>\n                        <InputNumber placeholder={4} min={1} max={4} />\n                    </Form.Item>\n\n                    <Form.Item name='day' label='Day' initialValue={3}>\n                        <InputNumber placeholder={2} min={1} max={1000} />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type='primary' htmlType='submit'>\n                          Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div className='results-list'>\n                    {csvLink}\n                    <Table dataSource={results} \n                        bordered\n                        columns={gameAPIColumns(batters, pitchers, teams, searchInput, this.handleSearch, this.handleReset)}\n                        scroll={{ x: 'max-content' }}\n                        />\n                </div>\n            </Layout.Content>\n      );\n    }\n}\n\nexport default Games;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { Layout } from 'antd';\nimport About from './About';\nimport Menu from './Menu';\nimport Events from './Events';\nimport BatterStats from './BatterStats';\nimport PitcherStats from './PitcherStats';\nimport Games from './Games';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <HashRouter basename='/'>\n                <div className='App'>\n                    <Layout>\n                        <Layout.Header>\n                            <h1>Blaseball Scryer</h1>\n                            <Menu />\n                        </Layout.Header>\n                        <Route exact path='/' component={Events} />\n                        <Route path='/batter' component={BatterStats} />\n                        <Route path='/pitcher' component={PitcherStats} />\n                        <Route path='/games' component={Games} />\n                        <Route path='/about' component={About} />\n                    </Layout>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}