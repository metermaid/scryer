{"version":3,"sources":["About.js","Menu.js","services/LocalStorage.js","services/CachingManager.js","services/Blaseball.js","services/SIBR.js","config/EventsConfig.js","config/ColumnsConfig.js","Events.js","config/APIConfig.js","BatterStats.js","PitcherStats.js","App.js","serviceWorker.js","index.js"],"names":["About","Content","className","href","React","Component","Menu","location","this","props","theme","mode","selectedKeys","pathname","Item","key","to","withRouter","loadData","serializedData","localStorage","getItem","JSON","parse","error","cachedPromises","cachedServices","checkCache","dataKey","cachedService","inMemoryCache","inMemoryData","data","currentTime","Date","expires","localStore","localCache","localData","Object","entries","forEach","storageItem","checkCachedServices","Promise","resolve","checkCachedPromises","cachePromise","promise","cacheService","now","cacheData","setSeconds","getSeconds","originalCacheData","stringify","setItem","saveData","assign","resetCachedPromise","bonusPlayers","getTeams","cache","axios","get","then","response","getPlayersFromBlaseball","type","teamPromises","map","team","processTeam","all","nickname","ids","LodashGet","join","results","params","player","getPlayerObject","concat","getBonusPlayers","value","_id","name","searchkey","label","String","fromCodePoint","emoji","filter","localeCompare","fullName","position","LodashSortBy","LodashFlatten","renderPlayer","playerId","players","LodashFind","renderPlayerTeam","renderTeam","teamId","teams","addEventCols","remainder","row","newValues","id","batter_team_name","batter_team_id","pitcher_team_name","pitcher_team_id","batter_name","batter_id","pitcher_name","pitcher_id","addPlayerCols","index","cleanedParams","LodashPickBy","LodashIdentity","catch","reject","api","LodashOmit","gameEvents","text","getColumnAlphaSortProps","field_name","sorter","a","b","getColumnNumericalSortProps","getColumnPlayerFilterProps","filters","onFilter","record","getColumnTeamFilterProps","includes","getColumnSearchProps","dataIndex","searchInput","handleSearch","handleReset","filterDropdown","setSelectedKeys","confirm","clearFilters","style","padding","ref","node","placeholder","onChange","e","target","onPressEnter","width","marginBottom","display","onClick","icon","SearchOutlined","size","filterIcon","filtered","color","undefined","toString","toLowerCase","onFilterDropdownVisibleChange","visible","setTimeout","select","gameEventColumns","batters","pitchers","eventId","event_type","line","batterStatColumns","pitcherStatColumns","formLayout","labelCol","span","wrapperCol","tableLayout","bordered","scroll","x","Events","state","searchText","searchedColumn","onFinish","bind","getPlayers","Blaseball","setState","values","gameId","pitcherId","batterId","sibr","console","log","csvLink","length","errorMessage","closable","message","options","showSearch","allowClear","optionFilterProp","offset","htmlType","dataSource","columns","batterAPIs","pitcherAPIs","BatterStats","newResultsWithAPI","result","LodashUniqWith","LodashIsEq","required","PitcherStats","App","basename","Header","exact","path","component","Home","Batter","Pitcher","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bcc9818.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout } from 'antd';\n\nclass About extends React.Component {\n    render () {\n      return (\n            <Layout.Content className=\"site-layout-background\">\n                <p>Scryer is built to interact with SIBR's datablase, and would literally be nothing without SIBR. For more information on SIBR, <a href=\"https://github.com/Society-for-Internet-Blaseball-Research/sibr-faq\"> visit the FAQ</a>.</p>\n                <p>There are some features of the datablase API that are not built into scryer, so you may be interested in <a href=\"https://api.blaseball-reference.com/docs\">using it directly</a>.</p>\n                <p>A non-exhaustive list of people who are owed credits for the datablase include: Corvimae, lilserf, Sakimori, iliana, shibboh, tehstone.</p>\n                <p>For feedback or questions, contact risky#9552 on the SIBR or blaseball discords.</p>\n            </Layout.Content>\n      );\n    }\n}\n\nexport default About;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Menu as AntMenu } from 'antd';\n\nclass Menu extends React.Component {\n    render() {\n        const { location } = this.props;\n        return (\n            <AntMenu theme='dark' mode='horizontal' selectedKeys={[location.pathname]}>\n                <AntMenu.Item key='/'><Link to='/'>Event Logs</Link></AntMenu.Item>\n                <AntMenu.Item key='/batter'><Link to='/batter'>Batter Stats</Link></AntMenu.Item>\n                <AntMenu.Item key='/pitcher'><Link to='/pitcher'>Pitcher Stats</Link></AntMenu.Item>\n                <AntMenu.Item key='/about'><Link to='/about'>About</Link></AntMenu.Item>\n            </AntMenu>\n        );\n    }\n}\n\nexport default withRouter(Menu);\n","export const cacheKey = 'cache';\n\n/**\n * Clear localStorage cache\n */\nexport const clearCache = () => {\n    localStorage.removeItem(cacheKey);\n};\n\n/**\n * Load data from local storage via data key\n * @param {*} key\n */\nexport const loadData = (key) => {\n    try {\n        const serializedData = localStorage.getItem(key);\n\n        if (serializedData === null) {\n            return undefined;\n        }\n\n        return JSON.parse(serializedData);\n    } catch (error) {\n        return undefined;\n    }\n};\n\n/**\n * Save data to local storage\n * @param {*} key\n * @param {*} data\n */\nexport const saveData = (key, data) => {\n    try {\n        const serializedData = JSON.stringify(data);\n        localStorage.setItem(key, serializedData);\n    } catch (error) {\n        /* istanbul ignore next line */\n        return error;\n    }\n};\n","import { cacheKey, loadData, saveData } from './LocalStorage';\n\nconst cacheTTL = 600;\n\nlet cachedPromises = {};\nlet cachedServices = {};\n\nconst checkCachedPromises = (dataKey) => cachedPromises[dataKey + 'Promise'];\n\nconst resetCachedPromise = (dataKey) => {\n    cachedPromises[dataKey + 'Promise'] = false;\n};\n\nconst checkCachedServices = (dataKey) => {\n    const inMemoryCache = cachedServices && cachedServices[dataKey];\n    const inMemoryData = inMemoryCache && inMemoryCache.data;\n    const currentTime = Date.parse(new Date());\n\n    if (inMemoryCache && currentTime <= inMemoryCache.expires) {\n        return inMemoryData;\n    } else {\n        const localStore = loadData(cacheKey);\n\n        const localCache = localStore && localStore[dataKey];\n        const localData = localCache && localCache.data;\n\n        if (localData && Date.parse(new Date()) <= localCache.expires) {\n            localStore && Object.entries(localStore).forEach(([key, storageItem]) => {\n                if (!cachedServices[key] || currentTime <= storageItem.expires) {\n                    cachedServices[key] = storageItem;\n                }\n            });\n\n            return localData;\n        }\n    }\n    return false;\n};\n\nexport function checkCache (dataKey) {\n    const cachedService = checkCachedServices(dataKey);\n\n    if (cachedService) {\n        return Promise.resolve(cachedService);\n    }\n\n    return checkCachedPromises(dataKey) || false;\n}\n\nexport function cachePromise (dataKey, promise) {\n    cachedPromises[dataKey + 'Promise'] = promise;\n    return promise;\n}\n\nexport function cacheService (dataKey, data) {\n    if (!data) { return data; }\n\n    const now = new Date();\n    const cacheData = {\n        data: data,\n        expires: now.setSeconds(now.getSeconds() + cacheTTL)\n    };\n\n    const originalCacheData = loadData(cacheKey);\n    const newCache = Object.assign({}, originalCacheData, {[dataKey]: cacheData});\n    saveData(cacheKey, newCache);\n    cachedServices[dataKey] = cacheData;\n\n    resetCachedPromise(dataKey);\n\n    return data;\n}\n\nexport default {\n    cachePromise,\n    cacheService,\n    checkCache\n};\n","import axios from 'axios';\nimport LodashGet from 'lodash/get';\nimport LodashFlatten from 'lodash/flatten';\nimport LodashSortBy from 'lodash/sortBy';\n\nimport { checkCache, cachePromise, cacheService } from './CachingManager';\n\nconst bonusPlayers = [\n  {\n    \"_id\": \"b86237bb-ade6-4b1d-9199-a3cc354118d9\",\n    \"name\": \"Hurley Pacheco\",\n    \"team\": \"Boston Flowers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"f9c0d3cb-d8be-4f53-94c9-fc53bcbce520\",\n    \"name\": \"Matteo Prestige\",\n    \"team\": \"Charleston Shoe Thieves\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"_id\": \"8e1fd784-99d5-41c1-a6c5-6b947cec6714\",\n    \"name\": \"Velasquez Meadows\",\n    \"team\": \"Hellmouth Sunbeams\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"d5b6b11d-3924-4634-bd50-76553f1f162b\",\n    \"name\": \"Ogden Mendoza\",\n    \"team\": \"Breckenridge Jazz Hands\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"_id\": \"76c4853b-7fbc-4688-8cda-c5b8de1724e4\",\n    \"name\": \"Lars Mendoza\",\n    \"team\": \"Dallas Steaks\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"70a458ed-25ca-4ff8-97fc-21cbf58f2c2a\",\n    \"name\": \"Trevino Merritt\",\n    \"team\": \"Canada Moist Talkers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"40db1b0b-6d04-4851-adab-dd6320ad2ed9\",\n    \"name\": \"Scrap Murphy\",\n    \"team\": \"New York Millennials\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"_id\": \"80a2f015-9d40-426b-a4f6-b9911ba3add8\",\n    \"name\": \"Paul Barnes\",\n    \"team\": \"San Francisco Lovers\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"_id\": \"03097200-0d48-4236-a3d2-8bdb153aa8f7\",\n    \"name\": \"Bennett Browning\",\n    \"team\": \"Seattle Garages\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"c83f0fe0-44d1-4342-81e8-944bb38f8e23\",\n    \"name\": \"Langley Wheeler\",\n    \"team\": \"Dallas Steaks\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"57448b62-f952-40e2-820c-48d8afe0f64d\",\n    \"name\": \"Jessi Wise\",\n    \"team\": \"Hawaii Fridays\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"6fc3689f-bb7d-4382-98a2-cf6ddc76909d\",\n    \"name\": \"Cedric Gonzalez\",\n    \"team\": \"Philly Pies\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"3afb30c1-1b12-466a-968a-5a9a21458c7f\",\n    \"name\": \"Dickerson Greatness\",\n    \"team\": \"Houston Spies\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"c83a13f6-ee66-4b1c-9747-faa67395a6f1\",\n    \"name\": \"Zi Delacruz\",\n    \"team\": \"Dallas Steaks\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"262c49c6-8301-487d-8356-747023fa46a9\",\n    \"name\": \"Alexandria Dracaena\",\n    \"team\": \"Breckenridge Jazz Hands\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"b3d518b9-dc68-4902-b68c-0022ceb25aa0\",\n    \"name\": \"Hendricks Rangel\",\n    \"team\": \"Hawaii Fridays\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"1ba715f2-caa3-44c0-9118-b045ea702a34\",\n    \"name\": \"Juan Rangel\",\n    \"team\": \"Philly Pies\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"2b1cb8a2-9eba-4fce-85cf-5d997ec45714\",\n    \"name\": \"Isaac Rubberman\",\n    \"team\": \"Boston Flowers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"90c6e6ca-77fc-42b7-94d8-d8afd6d299e5\",\n    \"name\": \"Miki Santana\",\n    \"team\": \"Houston Spies\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"bd549bfe-b395-4dc0-8546-5c04c08e24a5\",\n    \"name\": \"Sam Solis\",\n    \"team\": \"Hawaii Fridays\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"_id\": \"a1628d97-16ca-4a75-b8df-569bae02bef9\",\n    \"name\": \"Chorby Soul\",\n    \"team\": \"New York Millennials\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"4941976e-31fc-49b5-801a-18abe072178b\",\n    \"name\": \"Sebastian Sunshine\",\n    \"team\": \"Hawaii Fridays\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"b4505c48-fc75-4f9e-8419-42b28dcc5273\",\n    \"name\": \"Sebastian Townsend\",\n    \"team\": \"Charleston Shoe Thieves\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"472f50c0-ef98-4d05-91d0-d6359eec3946\",\n    \"name\": \"Rhys Trombone\",\n    \"team\": \"Hellmouth Sunbeams\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"7b0f91aa-4d66-4362-993d-6ff60f7ce0ef\",\n    \"name\": \"Blankenship Fischer\",\n    \"team\": \"Charleston Shoe Thieves\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"5b9727f7-6a20-47d2-93d9-779f0a85c4ee\",\n    \"name\": \"Kennedy Alstott\",\n    \"team\": \"Canada Moist Talkers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"43bf6a6d-cc03-4bcf-938d-620e185433e1\",\n    \"name\": \"Miguel Javier\",\n    \"team\": \"San Francisco Lovers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"f44a8b27-85c1-44de-b129-1b0f60bcb99c\",\n    \"name\": \"Atlas Jonbois\",\n    \"team\": \"Charleston Shoe Thieves\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"c86b5add-6c9a-40e0-aa43-e4fd7dd4f2c7\",\n    \"name\": \"Sosa Elftower\",\n    \"team\": \"Yellowstone Magic\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"bca38809-81de-42ff-94e3-1c0ebfb1e797\",\n    \"name\": \"Famous Oconnor\",\n    \"team\": \"Yellowstone Magic\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"_id\": \"773712f6-d76d-4caa-8a9b-56fe1d1a5a68\",\n    \"name\": \"Natha Kath\",\n    \"team\": \"Los Angeles Tacos\",\n    \"position\": \"rotation\"\n  },\n  {\n    \"_id\": \"3d4545ed-6217-4d7a-9c4a-209265eb6404\",\n    \"name\": \"Tiana Cash\",\n    \"team\": \"Seattle Garages\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"0fe896e1-108c-4ce9-97be-3470dde73c21\",\n    \"name\": \"Bryanayah Chang\",\n    \"team\": \"Boston Flowers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"d74a2473-1f29-40fa-a41e-66fa2281dfca\",\n    \"name\": \"Landry Violence\",\n    \"team\": \"Hades Tigers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"d744f534-2352-472b-9e42-cd91fa540f1b\",\n    \"name\": \"Tyler Violet\",\n    \"team\": \"Canada Moist Talkers\",\n    \"position\": \"lineup\"\n  },\n  {\n    \"_id\": \"3064c7d6-91cc-4c2a-a433-1ce1aabc1ad4\",\n    \"name\": \"Jorge Ito\",\n    \"team\": \"Boston Flowers\",\n    \"position\": \"lineup\"\n  }\n];\n\nexport const getPlayers = (type) => {\n    return getPlayersFromBlaseball(type).then(data => LodashSortBy(LodashFlatten(data), ['name']));\n};\n\nexport const getTeams = () => {\n    const dataKey = 'allTeams';\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get(`https://blaseball.com/database/allTeams`)\n        .then(response => cacheService(dataKey, response && response.data));\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getPlayersFromBlaseball = (type) => {\n    return getTeams().then(response => {\n        let teamPromises = response.map(team => processTeam(team, type));\n        return Promise.all(teamPromises);\n    });\n};\n\nconst processTeam = (team, type) => {\n    const dataKey = `${team.nickname}${type}Members`;\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n    const ids = LodashGet(team, type).join(',');\n    const results = axios.get(`https://blaseball.com/database/players`, { params: { ids: ids }})\n        .then(response => \n            cacheService(dataKey, \n                response && response.data && response.data.map(player => getPlayerObject(player, team)).concat(getBonusPlayers(team, type))\n            ));\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getPlayerObject = (player, team) => {\n    return {\n        value: player._id,\n        name: player.name,\n        searchkey: `${player.name} ${player._id} ${team.nickname}`,\n        label: `${player.name} (${String.fromCodePoint(team.emoji)} ${team.nickname})`,\n        team: team.nickname\n    };\n};\n\nconst getBonusPlayers = (team, type) => {\n    return bonusPlayers.filter(player => !player.team.localeCompare(team.fullName) && !player.position.localeCompare(type))\n        .map(player => getPlayerObject(player, team));\n};\n\nexport default {\n    getPlayers,\n    getTeams\n};\n","import axios from 'axios';\nimport LodashPickBy from 'lodash/pickBy';\nimport LodashOmit from 'lodash/omit';\nimport LodashIdentity from 'lodash/identity';\nimport LodashFind from 'lodash/find';\nimport LodashGet from 'lodash/get';\nimport { checkCache, cachePromise, cacheService } from './CachingManager';\n\nexport const getEvents = (params, players, teams) => {\n    const cleanedParams = LodashPickBy(params, LodashIdentity);\n    const dataKey = JSON.stringify(cleanedParams);\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get('https://api.blaseball-reference.com/v1/events', { params: cleanedParams })\n        .then(response => cacheService(dataKey, response && addEventCols(response.data, players, teams)))\n        .catch(/* istanbul ignore next */ error => Promise.reject(error));\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getPlayerAPI = (params, players, teams) => {\n    const cleanedParams = LodashPickBy(params, LodashIdentity);\n    const dataKey = JSON.stringify(cleanedParams);\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get('https://api.blaseball-reference.com/v1' + params.api, { params: LodashOmit(cleanedParams, ['api']) })\n        .then(response => cacheService(dataKey, response && addPlayerCols(response.data, players, teams)))\n        .catch(/* istanbul ignore next */ error => Promise.reject(error));\n\n    return cachePromise(dataKey, results);\n};\n\nconst renderPlayer = (playerId, players) => {\n  return LodashGet(LodashFind(players, { 'value': playerId}), 'name', playerId)\n};\n\nconst renderPlayerTeam = (playerId, players) => {\n  return LodashGet(LodashFind(players, { 'value': playerId}), 'team', '')\n};\n\nconst renderTeam = (teamId, teams) => {\n  const team = LodashFind(teams, { '_id': teamId});\n  return `${String.fromCodePoint(LodashGet(team, 'emoji', ''))} ${LodashGet(team, 'fullName', teamId)}`\n};\n\nconst addEventCols = (data, players, teams) => {\n    const { results, ...remainder } = data;\n    return {\n        results: results.map(row => {\n            const newValues = {\n                key: row.id,\n                batter_team_name: row.batter_team_id ? renderTeam(row.batter_team_id, teams) : '',\n                pitcher_team_name: row.pitcher_team_id ? renderTeam(row.pitcher_team_id, teams) : '',\n                batter_name: row.batter_id ? renderPlayer(row.batter_id, players) : '',\n                pitcher_name: row.pitcher_id ? renderPlayer(row.pitcher_id, players) : ''\n            };\n            return {...row, ...newValues};\n        }),\n        ...remainder\n    };\n};\n\nconst addPlayerCols = (data, players, teams) => {\n    const { results, ...remainder } = data;\n    return {\n        results: results.map((row, index) => {\n            const newValues = {\n                key: `${row.batter_id}-${index}`,\n                batter_team_name: row.batter_id ? renderPlayerTeam(row.batter_id, players) : '',\n                pitcher_team_name: row.pitcher_id ? renderPlayerTeam(row.pitcher_id, players) : '',\n                batter_name: row.batter_id ? renderPlayer(row.batter_id, players) : '',\n                pitcher_name: row.pitcher_id ? renderPlayer(row.pitcher_id, players) : ''\n            };\n            return {...row, ...newValues};\n        }),\n        ...remainder\n    };\n};\n\nexport default {\n    getEvents,\n    getPlayerAPI\n};\n","export const gameEvents = [\n    {\n        value: 'UNKNOWN',\n        text: 'Unknown'\n    }, {\n        value: 'NONE',\n        text: 'None'\n    }, {\n        value: 'OUT',\n        text: 'Out'\n    }, {\n        value: 'STRIKEOUT',\n        text: 'Strikeout'\n    }, {\n        value: 'STOLEN_BASE',\n        text: 'Stolen Base'\n    }, {\n        value: 'CAUGHT_STEALING',\n        text: 'Caught Stealing'\n    }, {\n        value: 'PICKOFF',\n        text: 'Pickoff'\n    }, {\n        value: 'WILD_PITCH',\n        text: 'Wild Pitch'\n    }, {\n        value: 'BALK',\n        text: 'Balk'\n    }, {\n        value: 'OTHER_ADVANCE',\n        text: 'Other Advance'\n    }, {\n        value: 'WALK',\n        text: 'Walk'\n    }, {\n        value: 'INTENTIONAL_WALK',\n        text: 'Intentional Walk'\n    }, {\n        value: 'HIT_BY_PITCH',\n        text: 'Hit By Pitch'\n    }, {\n        value: 'FIELDERS_CHOICE',\n        text: 'Fielders Choice'\n    }, {\n        value: 'SINGLE',\n        text: 'Single'\n    }, {\n        value: 'DOUBLE',\n        text: 'Double'\n    }, {\n        value: 'TRIPLE',\n        text: 'Triple'\n    }, {\n        value: 'HOME_RUN',\n        text: 'Home Run'\n    }\n];\n\nexport const playerEvents = [\n    {\n        value: 'INCINERATION',\n        text: 'Incineration'\n    }, {\n        value: 'PEANUT_GOOD',\n        text: 'Peanut (Yummy Reaction)'\n    }, {\n        value: 'PEANUT_BAD',\n        text: 'Peanut (Allergic Reaction)'\n    }\n];\n\nexport default {\n    gameEvents,\n    playerEvents\n};","import React from 'react';\nimport { gameEvents } from './EventsConfig';\nimport { Button, Input, Space } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport LodashFind from 'lodash/find';\nimport LodashGet from 'lodash/get';\nimport LodashSortBy from 'lodash/sortBy';\n\nexport const renderEvents = (eventId) => {\n  return LodashGet(LodashFind(gameEvents, { 'value': eventId}), 'text', eventId);\n};\n\nexport const renderArray = (array) => {\n  return array.map(line => (<div>{line}</div>));\n};\n\nconst getColumnAlphaSortProps = (field_name) => ({\n  sorter: (a, b) => LodashGet(a, field_name, '').localeCompare(LodashGet(b, field_name, ''))\n});\n\nconst getColumnNumericalSortProps = (field_name) => ({\n  sorter: (a, b) => LodashGet(a, field_name) - LodashGet(b, field_name)\n});\n\nconst getColumnPlayerFilterProps = (players, field_name) => ({\n  filters: players.map(row => { return { value: row.name, text: row.name } }),\n  onFilter: (value, record) => value.localeCompare(LodashGet(record, field_name)) === 0\n});\n\nconst getColumnTeamFilterProps = (teams, field_name) => ({\n  filters: LodashSortBy(teams.map(row => { return { value: row.nickname, text: row.fullName } }), ['text']),\n  onFilter: (value, record) => LodashGet(record, field_name).includes(value)\n});\n\nconst getColumnSearchProps = (dataIndex, searchInput, handleSearch, handleReset) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    }\n  });\n\nexport const gameEventColumns = (batters, pitchers, teams, searchInput, handleSearch, handleReset) => {\n  return [\n    {\n      'dataIndex': 'id',\n      'title': 'ID',\n      ...getColumnNumericalSortProps('id'),\n      ...getColumnSearchProps('id', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'game_id',\n      'title': 'Game ID',\n      ...getColumnSearchProps('game_id', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'event_type',\n      'title': 'Event Type',\n      'render': (text, record, index) => renderEvents(text),\n      'filters': gameEvents,\n      'onFilter': (value, record) => value.localeCompare(record.event_type) === 0,\n      ...getColumnAlphaSortProps('event_type')\n    },\n    {\n      'dataIndex': 'event_text',\n      'title': 'Event Text',\n      'render': (text, record, index) => renderArray(text),\n      'width': 200,\n      ...getColumnSearchProps('event_text', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'batter_name',\n      'title': 'Batter Name',\n      ...getColumnPlayerFilterProps(batters, 'batter_name'),\n      ...getColumnAlphaSortProps('batter_name')\n    },\n    {\n      'dataIndex': 'batter_team_name',\n      'title': 'Batter Team Name',\n      ...getColumnTeamFilterProps(teams, 'batter_team_name'),\n      ...getColumnAlphaSortProps('batter_team_name')\n    },\n    {\n      'dataIndex': 'pitcher_name',\n      'title': 'Pitcher Name',\n      ...getColumnPlayerFilterProps(pitchers, 'pitcher_name'),\n      ...getColumnAlphaSortProps('pitcher_name')\n    },\n    {\n      'dataIndex': 'pitcher_team_name',\n      'title': 'Pitcher Team Name',\n      ...getColumnTeamFilterProps(teams, 'pitcher_team_name'),\n      ...getColumnAlphaSortProps('pitcher_team_name')\n    },\n    {\n      'dataIndex': 'inning',\n      'title': 'Inning',\n      ...getColumnNumericalSortProps('inning'),\n      ...getColumnSearchProps('inning', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'home_score',\n      'title': 'Home Score',\n      ...getColumnNumericalSortProps('home_score'),\n      ...getColumnSearchProps('home_score', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'away_score',\n      'title': 'Away Score',\n      ...getColumnNumericalSortProps('away_score'),\n      ...getColumnSearchProps('away_score', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'home_strike_count',\n      'title': 'Home Strike Count',\n      ...getColumnNumericalSortProps('home_strike_count'),\n      ...getColumnSearchProps('home_strike_count', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'away_strike_count',\n      'title': 'Away Strike Count',\n      ...getColumnNumericalSortProps('away_strike_count'),\n      ...getColumnSearchProps('away_strike_count', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'outs_before_play',\n      'title': 'Outs before Play',\n      ...getColumnNumericalSortProps('outs_before_play'),\n      ...getColumnSearchProps('outs_before_play', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'batter_count',\n      'title': 'Batter Count',\n      ...getColumnNumericalSortProps('batter_count'),\n      ...getColumnSearchProps('batter_count', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'pitches',\n      'title': 'Pitches',\n      ...getColumnAlphaSortProps(['pitches', 0]),\n      'sorter': (a, b) => LodashGet(a, 'pitches', []).join('').localeCompare(LodashGet(b, 'pitches', []).join('')),\n      ...getColumnSearchProps('pitches', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'total_strikes',\n      'title': 'Total Strikes',\n      ...getColumnNumericalSortProps('total_strikes'),\n      ...getColumnSearchProps('total_strikes', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'total_balls',\n      'title': 'Total Balls',\n      ...getColumnNumericalSortProps('total_balls'),\n      ...getColumnSearchProps('total_balls', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'bases_hit',\n      'title': 'Bases Hit',\n      ...getColumnNumericalSortProps('bases_hit'),\n      ...getColumnSearchProps('bases_hit', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'runs_batted_in',\n      'title': 'Runs Batted In',\n      ...getColumnNumericalSortProps('runs_batted_in'),\n      ...getColumnSearchProps('runs_batted_in', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'outs_on_play',\n      'title': 'Outs on Play',\n      ...getColumnNumericalSortProps('outs_on_play'),\n      ...getColumnSearchProps('outs_on_play', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'errors_on_play',\n      'title': 'Errors on Play',\n      ...getColumnNumericalSortProps('errors_on_play'),\n      ...getColumnSearchProps('errors_on_play', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'batter_base_after_play',\n      'title': 'Batter Base After Play',\n      ...getColumnNumericalSortProps('batter_base_after_play'),\n      ...getColumnSearchProps('batter_base_after_play', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'additional_context',\n      'title': 'Additional Context',\n      ...getColumnSearchProps('additional_context', searchInput, handleSearch, handleReset)\n    }\n  ];\n};\n\nexport const batterStatColumns = (batters, teams, searchInput, handleSearch, handleReset) => {\n    return [\n      {\n        'dataIndex': 'api',\n        'title': 'API',\n        ...getColumnAlphaSortProps('api'),\n        ...getColumnSearchProps('api', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'batter_id',\n        'title': 'Batter ID',\n        ...getColumnAlphaSortProps('batter_id'),\n        ...getColumnSearchProps('batter_id', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'batter_name',\n        'title': 'Batter Name',\n        ...getColumnAlphaSortProps('batter_name'),\n        ...getColumnPlayerFilterProps(batters, 'batter_name')\n      },\n      {\n        'dataIndex': 'batter_team_name',\n        'title': 'Batter Team Name',\n        ...getColumnAlphaSortProps('batter_team_name'),\n        ...getColumnTeamFilterProps(teams, 'batter_team_name')\n      },\n      {\n        'dataIndex': 'count',\n        'title': 'Count',\n        ...getColumnNumericalSortProps('count'),\n        ...getColumnSearchProps('count', searchInput, handleSearch, handleReset)\n      }\n    ];\n};\n\nexport const pitcherStatColumns = (pitchers, teams, searchInput, handleSearch, handleReset) => {\n    return [\n      {\n        'dataIndex': 'api',\n        'title': 'API',\n        ...getColumnAlphaSortProps('api'),\n        ...getColumnSearchProps('api', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'pitcher_id',\n        'title': 'Pitcher ID',\n        ...getColumnAlphaSortProps('pitcher_id'),\n        ...getColumnSearchProps('pitcher_id', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'pitcher_name',\n        'title': 'Pitcher Name',\n        ...getColumnAlphaSortProps('pitcher_name'),\n        ...getColumnPlayerFilterProps(pitchers, 'pitcher_name')\n      },\n      {\n        'dataIndex': 'pitcher_team_name',\n        'title': 'Pitcher Team Name',\n        ...getColumnAlphaSortProps('pitcher_team_name'),\n        ...getColumnTeamFilterProps(teams, 'pitcher_team_name')\n      },\n      {\n        'dataIndex': 'count',\n        'title': 'Count',\n        ...getColumnNumericalSortProps('count'),\n        ...getColumnSearchProps('count', searchInput, handleSearch, handleReset)\n      }\n    ];\n};\n\nexport default {\n    gameEventColumns,\n    batterStatColumns,\n    pitcherStatColumns\n};","import React from 'react';\nimport { Alert, Button, Form, Input, Select, Table, Layout } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport Blaseball from './services/Blaseball';\nimport sibr from './services/SIBR';\nimport { gameEventColumns } from './config/ColumnsConfig';\n\nconst formLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n};\n\nconst tableLayout = {\n    bordered: true,\n    scroll: { x: 'max-content' }\n};\n\nclass Events extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { results: null, batters: [], pitchers: [], teams: [], searchText: '', searchedColumn: '' };\n        this.onFinish = this.onFinish.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('lineup').then(/* istanbul ignore next */ data => {\n            data && this.setState({ batters: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('rotation').then(/* istanbul ignore next */ data => {\n            data && this.setState({ pitchers: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    onFinish (values) {\n        const { batters, pitchers, teams } = this.state;\n        const players = [...batters, ...pitchers];\n\n        if (values.gameId || values.pitcherId || values.batterId) {\n            return sibr.getEvents(values, players, teams)\n                .then(results => {\n                    console.log(results);\n                    this.setState({ results: results && results.results, error: null });\n                })\n                .catch(/* istanbul ignore next */ error => this.setState({ error }));\n        } else {\n            this.setState({ error: 'You need to select at least one of these three fields!' });\n        }\n    }\n\n    handleSearch (selectedKeys, confirm, dataIndex) {\n        confirm();\n        this.setState({ searchText: selectedKeys[0], searchedColumn: dataIndex });\n    }\n\n    handleReset (clearFilters) {\n        clearFilters();\n        this.setState({ searchText: '' });\n    }\n\n    render () {\n      const { error, results, batters, pitchers, teams, searchInput } = this.state;\n      const csvLink = results && results.length ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n      const errorMessage = error ? <Alert closable message={error} type='error' /> : '';\n      return (\n            <Layout.Content>\n                { errorMessage }\n                <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                    <Form.Item name='gameId' label='Game'>\n                        <Input placeholder='dc767612-eb77-417b-8d2f-c21eb4dab868' />\n                    </Form.Item>\n                    <Form.Item name='pitcherId' label='Pitcher'>\n                        <Select placeholder='Pitcher' options={pitchers} showSearch allowClear optionFilterProp='searchkey' />\n                    </Form.Item>\n                    <Form.Item name='batterId' label='Batter'>\n                        <Select placeholder='Batter' options={batters} showSearch allowClear optionFilterProp='searchkey' />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type='primary' htmlType='submit'>\n                          Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div className='results-list'>\n                    {csvLink}\n                    <Table dataSource={results} \n                        columns={gameEventColumns(batters, pitchers, teams, searchInput, this.handleSearch, this.handleReset)}\n                        {...tableLayout} />\n                </div>\n            </Layout.Content>\n      );\n    }\n}\n\nexport default Events;\n","export const batterAPIs = [\n    {\n        value: '/plateAppearances',\n        label: '/plateAppearances'\n    },\n    {\n        value: '/atBats',\n        label: '/atBats'\n    },\n    {\n        value: '/hits',\n        label: '/hits'\n    },\n    {\n        value: '/timesOnBase',\n        label: '/timesOnBase'\n    },\n    {\n        value: '/battingAverage',\n        label: '/battingAverage'\n    },\n    {\n        value: '/onBasePercentage',\n        label: '/onBasePercentage'\n    },\n    {\n        value: '/onBasePlusSlugging',\n        label: '/onBasePlusSlugging'\n    },\n    {\n        value: '/slugging',\n        label: '/slugging'\n    }\n];\n\nexport const pitcherAPIs = [\n    {\n        value: '/outsRecorded',\n        label: '/outsRecorded'\n    },\n    {\n        value: '/hitsRecorded',\n        label: '/hitsRecorded'\n    },\n    {\n        value: '/walksRecorded',\n        label: '/walksRecorded'\n    },\n    {\n        value: '/earnedRuns',\n        label: '/earnedRuns'\n    },\n    {\n        value: '/whip',\n        label: '/whip'\n    },\n    {\n        value: '/era',\n        label: '/era'\n    }\n];\n\nexport default {\n    batterAPIs,\n    pitcherAPIs\n};","import React from 'react';\nimport { Alert, Button, Form, Select, Layout, Table } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport LodashUniqWith from 'lodash/uniqWith';\nimport LodashIsEq from 'lodash/isEqual';\n\nimport Blaseball from './services/Blaseball';\nimport sibr from './services/SIBR';\nimport { batterAPIs } from './config/APIConfig';\nimport { batterStatColumns } from './config/ColumnsConfig';\n\nconst formLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n};\n\nclass BatterStats extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { error: null, batters: [], teams: [], results: [] };\n        this.onFinish = this.onFinish.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('lineup').then(/* istanbul ignore next */ data => {\n            data && this.setState({ batters: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    onFinish (values) {\n        const { batters, teams } = this.state;\n\n        if (values.api) {\n            return sibr.getPlayerAPI(values, batters, teams)\n                .then(results => {\n                    console.log(results);\n                    if (results && results.results) {\n                        const newResultsWithAPI = results.results.map(result => { return {...result, api: values.api }});\n                        this.setState({results: LodashUniqWith(this.state.results.concat(newResultsWithAPI), LodashIsEq), error: null });\n                    }\n                })\n                .catch(/* istanbul ignore next */ error => this.setState({ error }));\n        } else {\n            this.setState({ error: 'You need to select an API!' });\n        }\n    }\n\n    handleSearch (selectedKeys, confirm, dataIndex) {\n        confirm();\n        this.setState({ searchText: selectedKeys[0], searchedColumn: dataIndex });\n    }\n\n    handleReset (clearFilters) {\n        clearFilters();\n        this.setState({ searchText: '' });\n    }\n\n    render () {\n      const { error, batters, teams, results, searchInput } = this.state;\n      const csvLink = results && results.length ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n      const errorMessage = error ? <Alert closable message={error} type='error' /> : '';\n\n      return (\n            <Layout.Content>\n                { errorMessage }\n                <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                    <Form.Item name='api' label='API'>\n                        <Select placeholder='API' required options={batterAPIs} showSearch allowClear />\n                    </Form.Item>\n                    <Form.Item name='batterId' label='Batter'>\n                        <Select placeholder='Batter' options={batters} showSearch allowClear optionFilterProp='searchKey' />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type='primary' htmlType='submit'>\n                          Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div className='results-list'>\n                    {csvLink}\n                    <Table dataSource={results}\n                        bordered\n                        scroll={{ x: 'max-content' }}\n                        columns={batterStatColumns(batters, teams, searchInput, this.handleSearch, this.handleReset)}\n                        />\n                </div>\n            </Layout.Content>\n      );\n    }\n}\n\nexport default BatterStats;\n","import React from 'react';\nimport { Alert, Button, Form, Select, Layout, Table } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport LodashUniqWith from 'lodash/uniqWith';\nimport LodashIsEq from 'lodash/isEqual';\n\nimport Blaseball from './services/Blaseball';\nimport sibr from './services/SIBR';\nimport { pitcherAPIs } from './config/APIConfig';\nimport { pitcherStatColumns } from './config/ColumnsConfig';\n\nconst formLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n};\n\nclass PitcherStats extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { error: null, pitchers: [], teams: [], results: [] };\n        this.onFinish = this.onFinish.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('rotation').then(/* istanbul ignore next */ data => {\n            data && this.setState({ pitchers: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    onFinish (values) {\n        const { pitchers, teams } = this.state;\n\n        if (values.api) {\n            return sibr.getPlayerAPI(values, pitchers, teams)\n                .then(results => {\n                    console.log(results);\n                    if (results && results.results) {\n                        const newResultsWithAPI = results.results.map(result => { return {...result, api: values.api }});\n                        this.setState({results: LodashUniqWith(this.state.results.concat(newResultsWithAPI), LodashIsEq), error: null });\n                    }\n                })\n                .catch(/* istanbul ignore next */ error => this.setState({ error }));\n        } else {\n            this.setState({ error: 'You need to select an API!' });\n        }\n    }\n\n    handleSearch (selectedKeys, confirm, dataIndex) {\n        confirm();\n        this.setState({ searchText: selectedKeys[0], searchedColumn: dataIndex });\n    }\n\n    handleReset (clearFilters) {\n        clearFilters();\n        this.setState({ searchText: '' });\n    }\n\n    render () {\n      const { error, pitchers, teams, results, searchInput } = this.state;\n      const csvLink = results && results.length ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n      const errorMessage = error ? <Alert closable message={error} type='error' /> : '';\n\n      return (\n            <Layout.Content>\n                { errorMessage }\n                <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                    <Form.Item name='api' label='API'>\n                        <Select placeholder='API' required options={pitcherAPIs} showSearch allowClear />\n                    </Form.Item>\n                    <Form.Item name='pitcherId' label='Pitcher'>\n                        <Select placeholder='Pitcher' options={pitchers} showSearch allowClear optionFilterProp='searchKey' />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type='primary' htmlType='submit'>\n                          Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div className='results-list'>\n                    {csvLink}\n                    <Table dataSource={results} \n                        bordered\n                        scroll={{ x: 'max-content' }}\n                        columns={pitcherStatColumns(pitchers, teams, searchInput, this.handleSearch, this.handleReset)}\n                        />\n                </div>\n            </Layout.Content>\n      );\n    }\n}\n\nexport default PitcherStats;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { Layout } from 'antd';\nimport About from './About';\nimport Menu from './Menu';\nimport Events from './Events';\nimport BatterStats from './BatterStats';\nimport PitcherStats from './PitcherStats';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <HashRouter basename='/'>\n                <div className='App'>\n                    <Layout>\n                        <Layout.Header>\n                            <h1>Blaseball Scryer</h1>\n                            <Menu />\n                        </Layout.Header>\n                        <Route exact path='/' component={Home} />\n                        <Route path='/batter' component={Batter} />\n                        <Route path='/pitcher' component={Pitcher} />\n                        <Route path='/about' component={About} />\n                    </Layout>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\n\nconst Home = () => <Events />\nconst Batter = () => <BatterStats />\nconst Pitcher = () => <PitcherStats />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}