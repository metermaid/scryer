{"version":3,"sources":["About.js","Menu.js","config/EventsConfig.js","services/LocalStorage.js","services/CachingManager.js","services/Blaseball.js","services/SIBR.js","config/ColumnsConfig.js","Events.js","config/APIConfig.js","BatterStats.js","PitcherStats.js","Games.js","App.js","serviceWorker.js","index.js"],"names":["About","Content","className","href","React","Component","Menu","location","this","props","theme","mode","selectedKeys","pathname","Item","key","to","withRouter","gameEvents","value","text","weatherTypes","loadData","serializedData","localStorage","getItem","JSON","parse","error","cachedPromises","cachedServices","checkCache","dataKey","cachedService","inMemoryCache","inMemoryData","data","currentTime","Date","expires","localStore","localCache","localData","Object","entries","forEach","storageItem","checkCachedServices","Promise","resolve","checkCachedPromises","cachePromise","promise","cacheService","now","cacheData","setSeconds","getSeconds","originalCacheData","stringify","setItem","saveData","assign","resetCachedPromise","backups","BackupBatters","BackupPitchers","getTeams","cache","axios","get","then","response","catch","console","log","AllTeams","getPlayersFromBlaseball","type","teamPromises","map","team","processTeam","all","nickname","ids","LodashGet","join","results","params","LodashUniqBy","player","getPlayerObject","concat","getBonusPlayers","parseGameObject","game","weatherName","LodashFind","weather","match","String","fromCodePoint","homeTeamEmoji","homeTeamNickname","awayTeamEmoji","awayTeamNickname","label","name","emoji","position","id","searchkey","fullName","playerList","filter","localeCompare","LodashPick","LodashSortBy","LodashFlatten","season","day","renderPlayer","playerId","players","renderPlayerWithTeam","teamId","renderTeam","renderPlayerTeam","teams","addEventCols","remainder","row","newValues","batter_team_name","batter_team_id","pitcher_team_name","pitcher_team_id","batter_name","batter_id","pitcher_name","pitcher_id","batter_with_team","pitcher_with_team","addPlayerCols","index","team_name","count","cleanedParams","LodashPickBy","LodashIdentity","reject","api","LodashOmit","getColumnAlphaSortProps","field_name","sorter","a","b","getColumnNumericalSortProps","getColumnPlayerFilterProps","filters","onFilter","record","includes","getColumnTeamFilterProps","getColumnSearchProps","dataIndex","searchInput","handleSearch","handleReset","filterDropdown","setSelectedKeys","confirm","clearFilters","style","padding","ref","node","placeholder","onChange","e","target","onPressEnter","width","marginBottom","display","onClick","icon","SearchOutlined","size","filterIcon","filtered","color","undefined","toString","toLowerCase","onFilterDropdownVisibleChange","visible","setTimeout","select","getColumnZeroIndexedSearchProps","parseInt","getColumnNumericalSortAndSearchProps","gameEventColumns","batters","pitchers","advancedMode","getColumnNumericalSortAndSearchPropsShim","advancedModeColumnsHead","eventId","event_type","advancedModeColumnsTeamInfo","advancedModeColumnsScore","home_score","away_score","advancedModeColumnsTail","line","playerStatColumns","gameAPIColumns","getColumnSearchPropsShim","formLayout","labelCol","span","wrapperCol","tableLayout","bordered","scroll","x","Events","toggleChecked","setState","state","searchText","searchedColumn","onFinish","bind","getPlayers","Blaseball","values","gameId","pitcherId","batterId","gameIdPath","batterIdPath","pitcherIdPath","Boolean","history","push","search","sibr","defaultGame","URLSearchParams","defaultPitcher","defaultBatter","csvLink","length","errorMessage","closable","message","initialValue","options","showSearch","allowClear","optionFilterProp","offset","htmlType","dataSource","columns","batterAPIs","pitcherAPIs","BatterStats","newResultsWithAPI","result","LodashUniqWith","LodashIsEq","defaultAPI","defaultID","required","PitcherStats","Games","getGame","dayPath","Array","from","keys","reduce","previousPromise","nextDay","validResults","gameStart","defaultSeason","defaultDay","min","max","App","basename","Header","path","component","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4578cbe0.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout } from 'antd';\n\nclass About extends React.Component {\n    render () {\n      return (\n            <Layout.Content className=\"site-layout-background\">\n                <p>Scryer is built to interact with SIBR's datablase, and would literally be nothing without SIBR. For more information on SIBR, <a href=\"https://github.com/Society-for-Internet-Blaseball-Research/sibr-faq\"> visit the FAQ</a>.</p>\n                <p>There are some features of the datablase API that are not built into scryer, so you may be interested in <a href=\"https://api.blaseball-reference.com/docs\">using it directly</a>.</p>\n                <p>A non-exhaustive list of people who are owed credits for the datablase include: Corvimae, lilserf, Sakimori, iliana, shibboh, tehstone.</p>\n                <p>For feedback or questions, contact risky#9552 on the SIBR or blaseball discords.</p>\n            </Layout.Content>\n      );\n    }\n}\n\nexport default About;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Menu as AntMenu } from 'antd';\n\nclass Menu extends React.Component {\n    render() {\n        const { location } = this.props;\n        return (\n            <AntMenu theme='dark' mode='horizontal' selectedKeys={[location.pathname]}>\n                <AntMenu.Item key='/'><Link to='/'>Event Logs</Link></AntMenu.Item>\n                <AntMenu.Item key='/batter'><Link to='/batter'>Batter Stats</Link></AntMenu.Item>\n                <AntMenu.Item key='/pitcher'><Link to='/pitcher'>Pitcher Stats</Link></AntMenu.Item>\n                <AntMenu.Item key='/games'><Link to='/games'>Games</Link></AntMenu.Item>\n                <AntMenu.Item key='/about'><Link to='/about'>About</Link></AntMenu.Item>\n            </AntMenu>\n        );\n    }\n}\n\nexport default withRouter(Menu);\n","export const gameEvents = [\n    {\n        value: 'UNKNOWN',\n        text: 'Unknown'\n    }, {\n        value: 'NONE',\n        text: 'None'\n    }, {\n        value: 'OUT',\n        text: 'Out'\n    }, {\n        value: 'STRIKEOUT',\n        text: 'Strikeout'\n    }, {\n        value: 'STOLEN_BASE',\n        text: 'Stolen Base'\n    }, {\n        value: 'CAUGHT_STEALING',\n        text: 'Caught Stealing'\n    }, {\n        value: 'PICKOFF',\n        text: 'Pickoff'\n    }, {\n        value: 'WILD_PITCH',\n        text: 'Wild Pitch'\n    }, {\n        value: 'BALK',\n        text: 'Balk'\n    }, {\n        value: 'OTHER_ADVANCE',\n        text: 'Other Advance'\n    }, {\n        value: 'WALK',\n        text: 'Walk'\n    }, {\n        value: 'INTENTIONAL_WALK',\n        text: 'Intentional Walk'\n    }, {\n        value: 'HIT_BY_PITCH',\n        text: 'Hit By Pitch'\n    }, {\n        value: 'FIELDERS_CHOICE',\n        text: 'Fielders Choice'\n    }, {\n        value: 'SINGLE',\n        text: 'Single'\n    }, {\n        value: 'DOUBLE',\n        text: 'Double'\n    }, {\n        value: 'TRIPLE',\n        text: 'Triple'\n    }, {\n        value: 'HOME_RUN',\n        text: 'Home Run'\n    }\n];\n\nexport const playerEvents = [\n    {\n        value: 'INCINERATION',\n        text: 'Incineration'\n    }, {\n        value: 'PEANUT_GOOD',\n        text: 'Peanut (Yummy Reaction)'\n    }, {\n        value: 'PEANUT_BAD',\n        text: 'Peanut (Allergic Reaction)'\n    }\n];\n\nexport const weatherTypes = [\n    {\n        value: 0,\n        text: 'Void'\n    }, {\n        value: 1,\n        text: 'Sunny'\n    }, {\n        value: 2,\n        text: 'Overcast'\n    }, {\n        value: 3,\n        text: 'Rainy'\n    }, {\n        value: 4,\n        text: 'Sandstorm'\n    }, {\n        value: 5,\n        text: 'Snowy'\n    }, {\n        value: 6,\n        text: 'Acidic'\n    }, {\n        value: 7,\n        text: 'Solar Eclipse'\n    }, {\n        value: 8,\n        text: 'Glitter'\n    }, {\n        value: 9,\n        text: 'Bloodwind'\n    }, {\n        value: 10,\n        text: 'Peanuts'\n    }, {\n        value: 11,\n        text: 'Bird'\n    }, {\n        value: 12,\n        text: 'Feedback'\n    }, {\n        value: 13,\n        text: 'Reverb'\n    }\n];\n\nexport default {\n    gameEvents,\n    playerEvents,\n    weatherTypes\n};","export const cacheKey = 'cache';\n\n/**\n * Clear localStorage cache\n */\nexport const clearCache = () => {\n    localStorage.removeItem(cacheKey);\n};\n\n/**\n * Load data from local storage via data key\n * @param {*} key\n */\nexport const loadData = (key) => {\n    try {\n        const serializedData = localStorage.getItem(key);\n\n        if (serializedData === null) {\n            return undefined;\n        }\n\n        return JSON.parse(serializedData);\n    } catch (error) {\n        return undefined;\n    }\n};\n\n/**\n * Save data to local storage\n * @param {*} key\n * @param {*} data\n */\nexport const saveData = (key, data) => {\n    try {\n        const serializedData = JSON.stringify(data);\n        localStorage.setItem(key, serializedData);\n    } catch (error) {\n        /* istanbul ignore next line */\n        return error;\n    }\n};\n","import { cacheKey, loadData, saveData } from './LocalStorage';\n\nconst cacheTTL = 60000;\n\nlet cachedPromises = {};\nlet cachedServices = {};\n\nconst checkCachedPromises = (dataKey) => cachedPromises[dataKey + 'Promise'];\n\nconst resetCachedPromise = (dataKey) => {\n    cachedPromises[dataKey + 'Promise'] = false;\n};\n\nconst checkCachedServices = (dataKey) => {\n    const inMemoryCache = cachedServices && cachedServices[dataKey];\n    const inMemoryData = inMemoryCache && inMemoryCache.data;\n    const currentTime = Date.parse(new Date());\n\n    if (inMemoryCache && currentTime <= inMemoryCache.expires) {\n        return inMemoryData;\n    } else {\n        const localStore = loadData(cacheKey);\n\n        const localCache = localStore && localStore[dataKey];\n        const localData = localCache && localCache.data;\n\n        if (localData && Date.parse(new Date()) <= localCache.expires) {\n            localStore && Object.entries(localStore).forEach(([key, storageItem]) => {\n                if (!cachedServices[key] || currentTime <= storageItem.expires) {\n                    cachedServices[key] = storageItem;\n                }\n            });\n\n            return localData;\n        }\n    }\n    return false;\n};\n\nexport function checkCache (dataKey) {\n    const cachedService = checkCachedServices(dataKey);\n\n    if (cachedService) {\n        return Promise.resolve(cachedService);\n    }\n\n    return checkCachedPromises(dataKey) || false;\n}\n\nexport function cachePromise (dataKey, promise) {\n    cachedPromises[dataKey + 'Promise'] = promise;\n    return promise;\n}\n\nexport function cacheService (dataKey, data) {\n    if (!data) { return data; }\n\n    const now = new Date();\n    const cacheData = {\n        data: data,\n        expires: now.setSeconds(now.getSeconds() + cacheTTL)\n    };\n\n    const originalCacheData = loadData(cacheKey);\n    const newCache = Object.assign({}, originalCacheData, {[dataKey]: cacheData});\n    saveData(cacheKey, newCache);\n    cachedServices[dataKey] = cacheData;\n\n    resetCachedPromise(dataKey);\n\n    return data;\n}\n\nexport default {\n    cachePromise,\n    cacheService,\n    checkCache\n};\n","import axios from 'axios';\nimport LodashGet from 'lodash/get';\nimport LodashFind from 'lodash/find';\nimport LodashFlatten from 'lodash/flatten';\nimport LodashPick from 'lodash/pick';\nimport LodashSortBy from 'lodash/sortBy';\nimport LodashUniqBy from 'lodash/uniqBy';\nimport AllTeams from './../backups/allTeams';\nimport BackupBatters from './../backups/BackupBatters';\nimport BackupPitchers from './../backups/BackupPitchers';\nimport { weatherTypes } from './../config/EventsConfig';\nimport { checkCache, cachePromise, cacheService } from './CachingManager';\n\nconst backups = {\n    'lineup': BackupBatters,\n    'rotation': BackupPitchers\n}\n\nexport const getPlayers = (type) => {\n    return getPlayersFromBlaseball(type).then(data => cacheService(type + 'Players', LodashSortBy(LodashFlatten(data), ['name'])));\n};\n\nexport const getGames = (season, day) => {\n    const dataKey = 'games' + season + day;\n    const cache = checkCache(dataKey);\n    let results;\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n    if (season > 3) {\n        results = axios.get(`https://blaseballcors.herokuapp.com/https://www.blaseball.com/database/games`, { params: { season, day }})\n            .then(response => cacheService(dataKey, response && response.data.map(game => parseGameObject(game))));\n    } else {\n        results = axios.get(`https://blaseballcors.herokuapp.com/https://www.blaseball.com/database/games`, { params: { season, day }})\n            .then(response => cacheService(dataKey, response && response.data.map(game => parseGameObject(game))));\n    }\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getTeams = () => {\n    const dataKey = 'allTeams';\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get(`https://cors-proxy.blaseball-reference.com/database/allTeams`)\n        .then(response => cacheService(dataKey, response && response.data))\n        .catch((error) => {\n            console.log(error);\n            return AllTeams;\n        });\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getPlayersFromBlaseball = (type) => {\n    return getTeams().then(response => {\n        let teamPromises = response.map(team => processTeam(team, type));\n        return Promise.all(teamPromises);\n    });\n};\n\nconst processTeam = (team, type) => {\n    const dataKey = `${team.nickname}-${type}`;\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n    const ids = LodashGet(team, type).join(',');\n    const results = axios.get(`https://cors-proxy.blaseball-reference.com/database/players`, { params: { ids: ids }})\n        .then(response => \n            cacheService(dataKey, \n                response && response.data && LodashUniqBy(response.data.map(player => getPlayerObject(player, team, type)).concat(getBonusPlayers(backups[type], team, type)), 'id')\n            ))\n        .catch((error) => {\n            console.log(error);\n            return getBonusPlayers(backups[type], team, type);\n        });\n\n    return cachePromise(dataKey, results);\n};\n\nexport const parseGameObject = (game) => {\n    return {\n        ...game,\n        weatherName: LodashGet(LodashFind(weatherTypes, { 'value': game.weather}), 'text'),\n        match: `${String.fromCodePoint(game.homeTeamEmoji)} ${game.homeTeamNickname} - ${String.fromCodePoint(game.awayTeamEmoji)} ${game.awayTeamNickname}`\n    };\n};\n\nexport const getPlayerObject = (player, team, type) => {\n    return {\n        ...player,\n        label: `${player.name} (${String.fromCodePoint(team.emoji)} ${team.nickname})`,\n        position: type,\n        value: player.id,\n        searchkey: `${player.name} ${player.id} ${team.nickname}`,\n        team: team.fullName\n    };\n};\n\nconst cleanList = (playerList) => {\n    return playerList.map(player => LodashPick(player, ['value', 'searchkey', 'label', 'name']));\n};\n\nconst getBonusPlayers = (playerList, team, type) => {\n    return playerList.filter(player => !player.team.localeCompare(team.fullName) && !player.position.localeCompare(type))\n        .map(player => getPlayerObject(player, team));\n};\n\nexport default {\n    cleanList,\n    getPlayers,\n    getTeams,\n    getGames\n};\n","import axios from 'axios';\nimport LodashPickBy from 'lodash/pickBy';\nimport LodashOmit from 'lodash/omit';\nimport LodashIdentity from 'lodash/identity';\nimport LodashFind from 'lodash/find';\nimport LodashGet from 'lodash/get';\nimport { checkCache, cachePromise, cacheService } from './CachingManager';\n\nexport const getEvents = (params, players, teams) => {\n    const cleanedParams = LodashPickBy(params, LodashIdentity);\n    const dataKey = JSON.stringify(cleanedParams);\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get('https://api.blaseball-reference.com/v1/events', { params: cleanedParams })\n        .then(response => cacheService(dataKey, response && addEventCols(response.data, players, teams)))\n        .catch(/* istanbul ignore next */ error => Promise.reject(error));\n\n    return cachePromise(dataKey, results);\n};\n\nexport const getPlayerAPI = (params, players, teams) => {\n    const cleanedParams = LodashPickBy(params, LodashIdentity);\n    const dataKey = JSON.stringify(cleanedParams);\n    const cache = checkCache(dataKey);\n\n    /* istanbul ignore next line */\n    if (cache) { return cache; }\n\n    const results = axios.get('https://api.blaseball-reference.com/v1' + params.api, { params: LodashOmit(cleanedParams, ['api']) })\n        .then(response => cacheService(dataKey, response && addPlayerCols(response.data, players, teams)))\n        .catch(/* istanbul ignore next */ error => Promise.reject(error));\n\n    return cachePromise(dataKey, results);\n};\n\nconst renderPlayer = (playerId, players) => {\n  return LodashGet(LodashFind(players, { 'value': playerId}), 'name', playerId)\n};\n\nconst renderPlayerWithTeam = (playerId, players, teamId, team) => {\n    return `${renderPlayer(playerId, players)} (${renderTeam(teamId, team)})`;\n};\n\nconst renderPlayerTeam = (playerId, players) => {\n  return LodashGet(LodashFind(players, { 'value': playerId}), 'team', '')\n};\n\nconst renderTeam = (teamId, teams) => {\n  const team = LodashFind(teams, { 'id': teamId});\n  return `${String.fromCodePoint(LodashGet(team, 'emoji', ''))} ${LodashGet(team, 'nickname', teamId)}`\n};\n\nconst addEventCols = (data, players, teams) => {\n    const { results, ...remainder } = data;\n    return {\n        results: results.map(row => {\n            const newValues = {\n                key: row.id,\n                batter_team_name: row.batter_team_id ? renderTeam(row.batter_team_id, teams) : '',\n                pitcher_team_name: row.pitcher_team_id ? renderTeam(row.pitcher_team_id, teams) : '',\n                batter_name: row.batter_id ? renderPlayer(row.batter_id, players) : '',\n                pitcher_name: row.pitcher_id ? renderPlayer(row.pitcher_id, players) : '',\n                batter_with_team: row.batter_id && row.batter_team_id ? renderPlayerWithTeam(row.batter_id, players, row.batter_team_id, teams) : '',\n                pitcher_with_team: row.pitcher_id && row.pitcher_team_id ? renderPlayerWithTeam(row.pitcher_id, players, row.pitcher_team_id, teams) : ''\n            };\n            return {...row, ...newValues};\n        }),\n        ...remainder\n    };\n};\n\nconst addPlayerCols = (data, players, teams) => {\n    const { results, ...remainder } = data;\n    return {\n        results: results.map((row, index) => {\n            const id = row.batter_id || row.pitcher_id || row.id || '';\n            const newValues = {\n                key: `${id}-${index}`,\n                id: id,\n                team_name: id ? renderPlayerTeam(id, players) : '',\n                name: id ? renderPlayer(id, players) : '',\n                count: row.count || row.value || ''\n            };\n            return {...row, ...newValues};\n        }),\n        ...remainder\n    };\n};\n\nexport default {\n    getEvents,\n    getPlayerAPI\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { weatherTypes, gameEvents } from './EventsConfig';\nimport { Button, Input, Space } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport LodashFind from 'lodash/find';\nimport LodashGet from 'lodash/get';\nimport LodashSortBy from 'lodash/sortBy';\n\nexport const renderEvents = (eventId) => {\n  return LodashGet(LodashFind(gameEvents, { 'value': eventId}), 'text', eventId);\n};\n\nexport const renderWeather = (weatherId) => {\n  return LodashGet(LodashFind(weatherTypes, { 'value': weatherId}), 'text', weatherId);\n};\n\nexport const renderArray = (array) => {\n  return array.map(line => (<div>{line}</div>));\n};\n\nexport const renderPlayer = (playerId, players) => {\n  return LodashGet(LodashFind(players, { 'value': playerId}), 'label', playerId)\n};\n\nexport const renderTeam = (teamId, teams) => {\n  const team = LodashFind(teams, { 'id': teamId});\n  return `${String.fromCodePoint(LodashGet(team, 'emoji', ''))} ${LodashGet(team, 'nickname', teamId)}`\n};\n\nconst getColumnAlphaSortProps = (field_name) => ({\n  sorter: (a, b) => LodashGet(a, field_name, '').localeCompare(LodashGet(b, field_name, ''))\n});\n\nconst getColumnArraySortProps = (field_name) => ({\n  sorter: (a, b) => LodashGet(a, field_name, []).join().localeCompare(LodashGet(b, field_name, '').join())\n});\n\nconst getColumnNumericalSortProps = (field_name) => ({\n  sorter: (a, b) => LodashGet(a, field_name) - LodashGet(b, field_name)\n});\n\nconst getColumnPlayerFilterProps = (players, field_name) => ({\n  filters: players.map(row => { return { value: row.name, text: row.name } }),\n  onFilter: (value, record) => LodashGet(record, field_name).includes(value)\n});\n\nconst getColumnTeamFilterProps = (teams, field_name) => ({\n  filters: LodashSortBy(teams.map(row => { return { value: row.nickname, text: row.fullName } }), ['text']),\n  onFilter: (value, record) => LodashGet(record, field_name).includes(value)\n});\n\nconst getColumnSearchProps = (dataIndex, searchInput, handleSearch, handleReset) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchInput && searchInput.select(), 100);\n      }\n    }\n  });\n\nconst getColumnZeroIndexedSearchProps = (dataIndex, searchInput, handleSearch, handleReset) => ({\n    ...getColumnSearchProps(dataIndex, searchInput, handleSearch, handleReset),\n    onFilter: (value, record) =>\n      record[dataIndex] ? parseInt(record[dataIndex]) + 1 === parseInt(value) : false\n  });\n\nconst getColumnNumericalSortAndSearchProps = (field_name, searchInput, handleSearch, handleReset) => ({\n  ...getColumnNumericalSortProps(field_name),\n  ...getColumnSearchProps(field_name, searchInput, handleSearch, handleReset)\n});\n\nexport const gameEventColumns = (batters, pitchers, teams, searchInput, handleSearch, handleReset, advancedMode) => {\n  const getColumnNumericalSortAndSearchPropsShim = (field_name) => {\n    return advancedMode ? getColumnNumericalSortAndSearchProps(field_name, searchInput, handleSearch, handleReset) : {}\n  };\n  const advancedModeColumnsHead = advancedMode ? [\n    {\n      'dataIndex': 'game_id',\n      'title': 'Game ID',\n      ...getColumnSearchProps('game_id', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'id',\n      'title': 'Event ID',\n      ...getColumnNumericalSortAndSearchPropsShim('id')\n    },\n    {\n      'dataIndex': 'event_type',\n      'title': 'Event Type',\n      'render': (text, record, index) => renderEvents(text),\n      'filters': gameEvents,\n      'onFilter': (value, record) => value.localeCompare(record.event_type) === 0,\n      ...getColumnAlphaSortProps('event_type')\n    }\n  ] : [];\n  const advancedModeColumnsTeamInfo = advancedMode ? [\n    {\n      'dataIndex': 'batter_name',\n      'title': 'Batter Name',\n      ...getColumnPlayerFilterProps(batters, 'batter_name'),\n      ...getColumnAlphaSortProps('batter_name')\n    },\n    {\n      'dataIndex': 'batter_team_name',\n      'title': 'Batter Team',\n      ...getColumnTeamFilterProps(teams, 'batter_team_name'),\n      ...getColumnAlphaSortProps('batter_team_name')\n    },\n    {\n      'dataIndex': 'pitcher_name',\n      'title': 'Pitcher Name',\n      ...getColumnPlayerFilterProps(pitchers, 'pitcher_name'),\n      ...getColumnAlphaSortProps('pitcher_name')\n    },\n    {\n      'dataIndex': 'pitcher_team_name',\n      'title': 'Pitcher Team',\n      ...getColumnTeamFilterProps(teams, 'pitcher_team_name'),\n      ...getColumnAlphaSortProps('pitcher_team_name')\n    }\n  ] : [\n    {\n      'dataIndex': 'batter_with_team',\n      'title': 'Batter (Team)'\n    },\n    {\n      'dataIndex': 'pitcher_with_team',\n      'title': 'Pitcher (Team)'\n    }\n  ];\n  const advancedModeColumnsScore = advancedMode ? [\n    {\n      'dataIndex': 'home_score',\n      'title': 'Home Score',\n      ...getColumnNumericalSortAndSearchPropsShim('home_score'),\n    },\n    {\n      'dataIndex': 'away_score',\n      'title': 'Away Score',\n      ...getColumnNumericalSortAndSearchPropsShim('away_score'),\n    }\n  ] : [\n    {\n      'title': 'Score',\n      'render': (text, record, index) => {\n        return `${record.home_score} - ${record.away_score}`\n      }\n    }\n  ];\n  const advancedModeColumnsTail = advancedMode ? [\n    {\n      'dataIndex': 'pitches',\n      'title': 'Pitches',\n      ...getColumnAlphaSortProps(['pitches', 0]),\n      'sorter': (a, b) => LodashGet(a, 'pitches', []).join('').localeCompare(LodashGet(b, 'pitches', []).join('')),\n      ...getColumnSearchProps('pitches', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'bases_hit',\n      'title': 'Bases Hit',\n      ...getColumnNumericalSortAndSearchPropsShim('bases_hit'),\n    },\n    {\n      'dataIndex': 'runs_batted_in',\n      'title': 'Runs Batted In',\n      ...getColumnNumericalSortAndSearchPropsShim('runs_batted_in'),\n    },\n    {\n      'dataIndex': 'total_strikes',\n      'title': 'Strikes',\n      ...getColumnNumericalSortAndSearchPropsShim('total_strikes'),\n    },\n    {\n      'dataIndex': 'total_balls',\n      'title': 'Balls',\n      ...getColumnNumericalSortAndSearchPropsShim('total_balls'),\n    },\n    {\n      'dataIndex': 'errors_on_play',\n      'title': 'Errors on Play',\n      ...getColumnNumericalSortAndSearchPropsShim('errors_on_play'),\n      ...getColumnSearchProps('errors_on_play', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'batter_base_after_play',\n      'title': 'Batter Base After Play',\n      ...getColumnNumericalSortAndSearchPropsShim('batter_base_after_play')\n    }\n  ] : [];\n  return [\n    {\n      'dataIndex': 'id',\n      'render': (text, record, index) => '',\n      'sorter': (a, b) => LodashGet(a, 'id') - LodashGet(b, 'id')\n    },\n    {\n      'dataIndex': 'season',\n      'title': 'Season',\n      'render': (text, record, index) => text+1,\n      ...getColumnNumericalSortProps('season'),\n      ...getColumnZeroIndexedSearchProps('season', searchInput, handleSearch, handleReset)\n    },\n    {\n      'dataIndex': 'day',\n      'title': 'Day',\n      'render': (text, record, index) => text+1,\n      ...getColumnNumericalSortProps('day'),\n      ...getColumnZeroIndexedSearchProps('day', searchInput, handleSearch, handleReset)\n    },\n    ...advancedModeColumnsHead,\n    {\n      'dataIndex': 'inning',\n      'title': 'Inning',\n      ...getColumnNumericalSortAndSearchPropsShim('inning')\n    },\n    ...advancedModeColumnsScore,\n    {\n      'dataIndex': 'event_text',\n      'title': 'Event Text',\n      'render': (text, record, index) => renderArray(text),\n      'width': 200,\n      ...getColumnSearchProps('event_text', searchInput, handleSearch, handleReset)\n    },\n    ...advancedModeColumnsTeamInfo,\n    {\n      'dataIndex': 'outs_on_play',\n      'title': 'Outs',\n      ...getColumnNumericalSortAndSearchPropsShim('outs_on_play'),\n    },\n    {\n      'dataIndex': 'additional_context',\n      'title': 'Additional Context',\n      ...getColumnSearchProps('additional_context', searchInput, handleSearch, handleReset)\n    },\n    ...advancedModeColumnsTail\n  ];\n};\n\nexport const playerStatColumns = (batters, teams, searchInput, handleSearch, handleReset) => {\n    return [\n      {\n        'dataIndex': 'api',\n        'title': 'API',\n        ...getColumnAlphaSortProps('api'),\n        ...getColumnSearchProps('api', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'id',\n        'title': 'Player ID',\n        ...getColumnAlphaSortProps('id'),\n        ...getColumnSearchProps('id', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'name',\n        'title': 'Player Name',\n        ...getColumnAlphaSortProps('name'),\n        ...getColumnPlayerFilterProps(batters, 'name')\n      },\n      {\n        'dataIndex': 'team_name',\n        'title': 'Team Name',\n        ...getColumnAlphaSortProps('team_name'),\n        ...getColumnTeamFilterProps(teams, 'team_name')\n      },\n      {\n        'dataIndex': 'count',\n        'title': 'Count',\n        ...getColumnNumericalSortProps('count'),\n        ...getColumnSearchProps('count', searchInput, handleSearch, handleReset)\n      }\n    ];\n};\n\nexport const gameAPIColumns = (batters, pitchers, teams, searchInput, handleSearch, handleReset) => {\n    const getColumnSearchPropsShim = (field_name) => {\n      return getColumnSearchProps(field_name, searchInput, handleSearch, handleReset)\n    };\n    const getColumnNumericalSortAndSearchPropsShim = (field_name) => {\n      return getColumnNumericalSortAndSearchProps(field_name, searchInput, handleSearch, handleReset)\n    };\n    return [\n      {\n        'dataIndex': 'id',\n        'title': 'Game ID',\n        'render': (text, record, index) => (\n          <Link to={{'pathname': '/', 'search': `?gameId=${text}`}}>{ text }</Link>\n        )\n      },\n      {\n        'dataIndex': 'season',\n        'title': 'Season',\n        'render': (text, record, index) => text+1,\n        ...getColumnNumericalSortProps('season'),\n        ...getColumnZeroIndexedSearchProps('season', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'day',\n        'title': 'Day',\n        'render': (text, record, index) => text+1,\n        ...getColumnNumericalSortProps('day'),\n        ...getColumnZeroIndexedSearchProps('day', searchInput, handleSearch, handleReset)\n      },\n      {\n        'dataIndex': 'match',\n        'title': 'Match',\n        ...getColumnTeamFilterProps(teams, 'match'),\n        ...getColumnAlphaSortProps('match')\n      },\n      {\n        'dataIndex': 'homeScore',\n        'title': 'Home Score',\n        ...getColumnNumericalSortAndSearchPropsShim('homeScore')\n      },\n      {\n        'dataIndex': 'awayScore',\n        'title': 'Away Score',\n        ...getColumnNumericalSortAndSearchPropsShim('awayScore')\n      },\n      {\n        'dataIndex': 'homeOdds',\n        'title': 'Home Odds',\n        ...getColumnNumericalSortAndSearchPropsShim('homeOdds')\n      },\n      {\n        'dataIndex': 'awayOdds',\n        'title': 'Away Odds',\n        ...getColumnNumericalSortAndSearchPropsShim('awayOdds')\n      },\n      {\n        'dataIndex': 'homePitcher',\n        'title': 'Home Pitcher',\n        'render': (text, record, index) => renderPlayer(text, pitchers),\n        ...getColumnPlayerFilterProps(pitchers, 'homePitcherName'),\n        ...getColumnAlphaSortProps('homePitcherName')\n      },\n      {\n        'dataIndex': 'awayPitcher',\n        'title': 'Away Pitcher',\n        'render': (text, record, index) => renderPlayer(text, pitchers),\n        ...getColumnPlayerFilterProps(pitchers, 'awayPitcherName'),\n        ...getColumnAlphaSortProps('awayPitcherName')\n      },\n      {\n        'dataIndex': 'inning',\n        'title': 'Inning',\n        ...getColumnNumericalSortAndSearchPropsShim('inning')\n      },\n      {\n        'dataIndex': 'outcomes',\n        'title': 'Outcomes',\n        ...getColumnArraySortProps('outcomes'),\n        ...getColumnSearchPropsShim('outcomes')\n      },\n      {\n        'dataIndex': 'shame',\n        'title': 'Shame',\n        'render': (text, record, index) => text ? \"TRUE\" : \"FALSE\",\n        ...getColumnNumericalSortProps('shame'),\n        filters: [{value: true, text: \"TRUE\"}, {value: false, text: \"FALSE\" }],\n        onFilter: (value, record) => LodashGet(record, 'shame') === value\n      },\n      {\n        'dataIndex': 'weatherName',\n        'title': 'Weather',\n        ...getColumnAlphaSortProps('weatherName'),\n        filters: weatherTypes,\n        onFilter: (value, record) => LodashGet(record, 'weather') === value\n      }\n    ];\n};\n\nexport default {\n    gameAPIColumns,\n    gameEventColumns,\n    playerStatColumns\n};","import React from 'react';\nimport { Alert, Button, Form, Input, Select, Table, Layout, Checkbox } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport Blaseball from './services/Blaseball';\nimport sibr from './services/SIBR';\nimport { gameEventColumns } from './config/ColumnsConfig';\n\nconst formLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n};\n\nconst tableLayout = {\n    bordered: true,\n    scroll: { x: 'max-content' }\n};\n\nclass Events extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            results: null,\n            batters: [],\n            pitchers: [],\n            teams: [],\n            searchText: '',\n            searchedColumn: '',\n            advancedMode: false\n        };\n        this.onFinish = this.onFinish.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('lineup').then(/* istanbul ignore next */ data => {\n            data && this.setState({ batters: Blaseball.cleanList(data)});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('rotation').then(/* istanbul ignore next */ data => {\n            data && this.setState({ pitchers: Blaseball.cleanList(data)});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    onFinish (values) {\n        const { batters, pitchers, teams } = this.state;\n        const players = [...batters, ...pitchers];\n\n        if (values.gameId || values.pitcherId || values.batterId) {\n            const gameIdPath = values.gameId ? `gameId=${values.gameId}` : '';\n            const batterIdPath = values.batterId ? `batterId=${values.batterId}` : '';\n            const pitcherIdPath = values.pitcherId ? `pitcherId=${values.pitcherId}` : '';\n            const pathname = `?${[gameIdPath, batterIdPath, pitcherIdPath].filter(Boolean).join('&')}`;\n            this.props.history.push({ search: pathname });\n\n            return sibr.getEvents(values, players, teams)\n                .then(results => {\n                    this.setState({ results: results && results.results, error: null });\n                })\n                .catch(/* istanbul ignore next */ error => this.setState({ error }));\n        } else {\n            this.setState({ error: 'You need to select at least one of these three fields!' });\n        }\n    }\n\n    handleSearch (selectedKeys, confirm, dataIndex) {\n        confirm();\n        this.setState({ searchText: selectedKeys[0], searchedColumn: dataIndex });\n    }\n\n    handleReset (clearFilters) {\n        clearFilters();\n        this.setState({ searchText: '' });\n    }\n\n    toggleChecked = () => {\n        this.setState({ advancedMode: !this.state.advancedMode });\n    };\n\n    render () {\n        const search = this.props.location.search;\n        const defaultGame = new URLSearchParams(search).get('gameId');\n        const defaultPitcher = new URLSearchParams(search).get('pitcherId');\n        const defaultBatter = new URLSearchParams(search).get('batterId');\n\n        const { error, results, batters, pitchers, teams, searchInput, advancedMode } = this.state;\n        const csvLink = results && results.length ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n        const errorMessage = error ? <Alert closable message={error} type='error' /> : '';\n\n        return (\n            <Layout.Content>\n                { errorMessage }\n                <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                    <Form.Item name='gameId' label='Game' initialValue={defaultGame}>\n                        <Input placeholder='dc767612-eb77-417b-8d2f-c21eb4dab868' />\n                    </Form.Item>\n                    <Form.Item name='pitcherId' label='Pitcher' initialValue={defaultPitcher}>\n                        <Select placeholder='Pitcher' options={pitchers} showSearch allowClear optionFilterProp='searchkey' />\n                    </Form.Item>\n                    <Form.Item name='batterId' label='Batter' initialValue={defaultBatter}>\n                        <Select placeholder='Batter' options={batters} showSearch allowClear optionFilterProp='searchkey' />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type='primary' htmlType='submit'>\n                          Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div className='results-list'>\n                    <div>\n                        <span>{csvLink}</span>\n                        <span><Checkbox onChange={this.toggleChecked}>Show Advanced Mode?</Checkbox></span>\n                    </div>\n                    <Table dataSource={results} \n                        columns={gameEventColumns(batters, pitchers, teams, searchInput, this.handleSearch, this.handleReset, advancedMode)}\n                        {...tableLayout} />\n                </div>\n            </Layout.Content>\n        );\n    }\n}\n\nexport default Events;\n","export const batterAPIs = [\n    {\n        value: '/plateAppearances',\n        label: '/plateAppearances'\n    },\n    {\n        value: '/atBats',\n        label: '/atBats'\n    },\n    {\n        value: '/hits',\n        label: '/hits'\n    },\n    {\n        value: '/timesOnBase',\n        label: '/timesOnBase'\n    },\n    {\n        value: '/battingAverage',\n        label: '/battingAverage'\n    },\n    {\n        value: '/onBasePercentage',\n        label: '/onBasePercentage'\n    },\n    {\n        value: '/onBasePlusSlugging',\n        label: '/onBasePlusSlugging'\n    },\n    {\n        value: '/slugging',\n        label: '/slugging'\n    }\n];\n\nexport const pitcherAPIs = [\n    {\n        value: '/outsRecorded',\n        label: '/outsRecorded'\n    },\n    {\n        value: '/hitsRecorded',\n        label: '/hitsRecorded'\n    },\n    {\n        value: '/walksRecorded',\n        label: '/walksRecorded'\n    },\n    {\n        value: '/earnedRuns',\n        label: '/earnedRuns'\n    },\n    {\n        value: '/whip',\n        label: '/whip'\n    },\n    {\n        value: '/era',\n        label: '/era'\n    }\n];\n\nexport default {\n    batterAPIs,\n    pitcherAPIs\n};","import React from 'react';\nimport { Alert, Button, Form, Select, Layout, Table } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport LodashUniqWith from 'lodash/uniqWith';\nimport LodashIsEq from 'lodash/isEqual';\n\nimport Blaseball from './services/Blaseball';\nimport sibr from './services/SIBR';\nimport { batterAPIs } from './config/APIConfig';\nimport { playerStatColumns } from './config/ColumnsConfig';\n\nconst formLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n};\n\nclass BatterStats extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { error: null, batters: [], teams: [], results: [] };\n        this.onFinish = this.onFinish.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('lineup').then(/* istanbul ignore next */ data => {\n            data && this.setState({ batters: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    onFinish (values) {\n        const { batters, teams } = this.state;\n\n        if (values.api) {\n            const pathname = `?api=${values.api}&id=${values.batterId}`;\n            this.props.history.push({ search: pathname });\n            return sibr.getPlayerAPI(values, batters, teams)\n                .then(results => {\n                    console.log(results);\n                    if (results && results.results) {\n                        const newResultsWithAPI = results.results.map(result => { return {...result, api: values.api }});\n                        this.setState({results: LodashUniqWith(this.state.results.concat(newResultsWithAPI), LodashIsEq), error: null });\n                    }\n                })\n                .catch(/* istanbul ignore next */ error => this.setState({ error }));\n        } else {\n            this.setState({ error: 'You need to select an API!' });\n        }\n    }\n\n    handleSearch (selectedKeys, confirm, dataIndex) {\n        confirm();\n        this.setState({ searchText: selectedKeys[0], searchedColumn: dataIndex });\n    }\n\n    handleReset (clearFilters) {\n        clearFilters();\n        this.setState({ searchText: '' });\n    }\n\n    render () {\n        const search = this.props.location.search;\n        const defaultAPI = new URLSearchParams(search).get('api');\n        const defaultID = new URLSearchParams(search).get('id');\n        const { error, batters, teams, results, searchInput } = this.state;\n        const csvLink = results && results.length ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n        const errorMessage = error ? <Alert closable message={error} type='error' /> : '';\n\n        return (\n            <Layout.Content>\n                { errorMessage }\n                <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                    <Form.Item name='api' label='API' initialValue={defaultAPI}>\n                        <Select placeholder='API' required options={batterAPIs} showSearch allowClear />\n                    </Form.Item>\n                    <Form.Item name='batterId' label='Batter' initialValue={defaultID}>\n                        <Select placeholder='Batter' options={batters} showSearch allowClear optionFilterProp='searchKey' />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type='primary' htmlType='submit'>\n                          Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div className='results-list'>\n                    {csvLink}\n                    <Table dataSource={results}\n                        bordered\n                        scroll={{ x: 'max-content' }}\n                        columns={playerStatColumns(batters, teams, searchInput, this.handleSearch, this.handleReset)}\n                        />\n                </div>\n            </Layout.Content>\n        );\n    }\n}\n\nexport default BatterStats;\n","import React from 'react';\nimport { Alert, Button, Form, Select, Layout, Table } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport LodashUniqWith from 'lodash/uniqWith';\nimport LodashIsEq from 'lodash/isEqual';\n\nimport Blaseball from './services/Blaseball';\nimport sibr from './services/SIBR';\nimport { pitcherAPIs } from './config/APIConfig';\nimport { playerStatColumns } from './config/ColumnsConfig';\n\nconst formLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n};\n\nclass PitcherStats extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { error: null, pitchers: [], teams: [], results: [] };\n        this.onFinish = this.onFinish.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('rotation').then(/* istanbul ignore next */ data => {\n            data && this.setState({ pitchers: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    onFinish (values) {\n        const { pitchers, teams } = this.state;\n\n        if (values.api) {\n            const pathname = `?api=${values.api}&id=${values.pitcherId}`;\n            this.props.history.push({ search: pathname });\n            return sibr.getPlayerAPI(values, pitchers, teams)\n                .then(results => {\n                    console.log(results);\n                    if (results && results.results) {\n                        const newResultsWithAPI = results.results.map(result => { return {...result, api: values.api }});\n                        this.setState({results: LodashUniqWith(this.state.results.concat(newResultsWithAPI), LodashIsEq), error: null });\n                    }\n                })\n                .catch(/* istanbul ignore next */ error => this.setState({ error }));\n        } else {\n            this.setState({ error: 'You need to select an API!' });\n        }\n    }\n\n    handleSearch (selectedKeys, confirm, dataIndex) {\n        confirm();\n        this.setState({ searchText: selectedKeys[0], searchedColumn: dataIndex });\n    }\n\n    handleReset (clearFilters) {\n        clearFilters();\n        this.setState({ searchText: '' });\n    }\n\n    render () {\n        const search = this.props.location.search;\n        const defaultAPI = new URLSearchParams(search).get('api');\n        const defaultID = new URLSearchParams(search).get('id');\n\n        const { error, pitchers, teams, results, searchInput } = this.state;\n        const csvLink = results && results.length ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n        const errorMessage = error ? <Alert closable message={error} type='error' /> : '';\n\n        return (\n            <Layout.Content>\n                { errorMessage }\n                <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                    <Form.Item name='api' label='API' initialValue={defaultAPI}>\n                        <Select placeholder='API' required options={pitcherAPIs} showSearch allowClear />\n                    </Form.Item>\n                    <Form.Item name='pitcherId' label='Pitcher' initialValue={defaultID}>\n                        <Select placeholder='Pitcher' options={pitchers} showSearch allowClear optionFilterProp='searchKey' />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type='primary' htmlType='submit'>\n                          Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div className='results-list'>\n                    {csvLink}\n                    <Table dataSource={results} \n                        bordered\n                        scroll={{ x: 'max-content' }}\n                        columns={playerStatColumns(pitchers, teams, searchInput, this.handleSearch, this.handleReset)}\n                        />\n                </div>\n            </Layout.Content>\n        );\n    }\n}\n\nexport default PitcherStats;\n","import React from 'react';\nimport { Alert, Button, Form, InputNumber, Layout, Table } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport LodashUniqWith from 'lodash/uniqWith';\nimport LodashFind from 'lodash/find';\nimport LodashIsEq from 'lodash/isEqual';\nimport { gameAPIColumns } from './config/ColumnsConfig';\n\nimport Blaseball from './services/Blaseball';\n\nconst formLayout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 }\n};\n\nclass Games extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = { error: null, pitchers: [], teams: [], results: [] };\n        this.getGame = this.getGame.bind(this);\n        this.onFinish = this.onFinish.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    componentDidMount () {\n        this.getPlayers();\n    }\n\n    getPlayers() {\n        Blaseball.getTeams().then(/* istanbul ignore next */ data => {\n            data && this.setState({ teams: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('lineup').then(/* istanbul ignore next */ data => {\n            data && this.setState({ batters: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n        Blaseball.getPlayers('rotation').then(/* istanbul ignore next */ data => {\n            data && this.setState({ pitchers: data});\n        }).catch(/* istanbul ignore next */ error => Promise.reject(error));\n    }\n\n    getGame(season, day) {\n        return Blaseball.getGames(season, day)\n            .then(results => {\n                this.setState({results: LodashUniqWith(results.concat(this.state.results), LodashIsEq), error: null });\n                return results;\n            })\n            .catch(/* istanbul ignore next */ error => console.log(error));\n    }\n\n    onFinish (values) {\n        const dayPath = values.day ? `&day=${values.day}` : '';\n        const pathname = `?season=${values.season}${dayPath}`;\n        this.props.history.push({ search: pathname });\n        if (values.season && values.day) {\n            return this.getGame(parseInt(values.season) - 1, parseInt(values.day) - 1);\n        } else if (values.season) {\n            const days = Array.from(Array(150).keys());\n            days.reduce(async (previousPromise, nextDay) => {\n                const results = await previousPromise;\n\n                const validResults = results && results.length && LodashFind(results, (result) => result.gameStart);\n\n                if (typeof results === \"boolean\" || validResults) {\n                    return this.getGame(parseInt(values.season) - 1, nextDay);\n                } else {\n                    return Promise.resolve([]);\n                }\n            }, Promise.resolve(true));\n        }\n    }\n\n    handleSearch (selectedKeys, confirm, dataIndex) {\n        confirm();\n        this.setState({ searchText: selectedKeys[0], searchedColumn: dataIndex });\n    }\n\n    handleReset (clearFilters) {\n        clearFilters();\n        this.setState({ searchText: '' });\n    }\n\n    render () {\n        const search = this.props.location.search;\n        const defaultSeason = new URLSearchParams(search).get('season') || 5;\n        const defaultDay = new URLSearchParams(search).get('day') || (new URLSearchParams(search).get('season') ? '' : 4);\n\n        const { batters, pitchers, teams, error, results, searchInput } = this.state;\n        const csvLink = results && results.length ? (<CSVLink data={results}>Download CSV</CSVLink>) : '';\n        const errorMessage = error ? <Alert closable message={error} type='error' /> : '';\n\n        return (\n            <Layout.Content>\n                { errorMessage }\n                <Form onFinish={this.onFinish} {...formLayout} style={{ padding: '10px 0' }}>\n                    <Form.Item name='season' label='Season' initialValue={defaultSeason}>\n                        <InputNumber placeholder={5} min={1} max={5} />\n                    </Form.Item>\n\n                    <Form.Item name='day' label='Day' initialValue={defaultDay}>\n                        <InputNumber placeholder={3} min={1} max={150} />\n                    </Form.Item>\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                        <Button type='primary' htmlType='submit'>\n                          Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div className='results-list'>\n                    {csvLink}\n                    <Table dataSource={results} \n                        bordered\n                        columns={gameAPIColumns(batters, pitchers, teams, searchInput, this.handleSearch, this.handleReset)}\n                        scroll={{ x: 'max-content' }}\n                        />\n                </div>\n            </Layout.Content>\n        );\n    }\n}\n\nexport default Games;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Layout } from 'antd';\nimport About from './About';\nimport Menu from './Menu';\nimport Events from './Events';\nimport BatterStats from './BatterStats';\nimport PitcherStats from './PitcherStats';\nimport Games from './Games';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <HashRouter basename='/'>\n                <div className='App'>\n                    <Layout>\n                        <Layout.Header>\n                            <h1>Blaseball Scryer</h1>\n                            <Menu />\n                        </Layout.Header>\n                        <Switch>\n                            <Route path='/batter' component={BatterStats} />\n                            <Route path='/pitcher' component={PitcherStats} />\n                            <Route path='/games' component={Games} />\n                            <Route path='/about' component={About} />\n                            <Route path='/' component={Events} />\n                        </Switch>\n                    </Layout>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}